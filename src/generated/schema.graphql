### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

scalar DateTime

type Menu {
  createdAt: DateTime!
  id: ID!
  menuItems(after: String, before: String, first: Int, last: Int, orderBy: MenuItemOrderByInput, skip: Int, where: MenuItemWhereInput): [MenuItem!]
  organization: Organization!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

type MenuChoice {
  header: String!
  id: ID!
  selections(after: String, before: String, first: Int, last: Int, orderBy: MenuSelectionOrderByInput, skip: Int, where: MenuSelectionWhereInput): [MenuSelection!]
  subHeader: String
}

enum MenuChoiceOrderByInput {
  createdAt_ASC
  createdAt_DESC
  header_ASC
  header_DESC
  id_ASC
  id_DESC
  subHeader_ASC
  subHeader_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input MenuChoiceWhereInput {
  AND: [MenuChoiceWhereInput!]
  header: String
  header_contains: String
  header_ends_with: String
  header_gt: String
  header_gte: String
  header_in: [String!]
  header_lt: String
  header_lte: String
  header_not: String
  header_not_contains: String
  header_not_ends_with: String
  header_not_in: [String!]
  header_not_starts_with: String
  header_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [MenuChoiceWhereInput!]
  OR: [MenuChoiceWhereInput!]
  selections_every: MenuSelectionWhereInput
  selections_none: MenuSelectionWhereInput
  selections_some: MenuSelectionWhereInput
  subHeader: String
  subHeader_contains: String
  subHeader_ends_with: String
  subHeader_gt: String
  subHeader_gte: String
  subHeader_in: [String!]
  subHeader_lt: String
  subHeader_lte: String
  subHeader_not: String
  subHeader_not_contains: String
  subHeader_not_ends_with: String
  subHeader_not_in: [String!]
  subHeader_not_starts_with: String
  subHeader_starts_with: String
}

type MenuHeader {
  id: ID!
  menu: Menu
  menuItems(after: String, before: String, first: Int, last: Int, orderBy: MenuItemOrderByInput, skip: Int, where: MenuItemWhereInput): [MenuItem!]
  name: String!
  subHeader: String
}

input MenuHeaderWhereInput {
  AND: [MenuHeaderWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  menu: MenuWhereInput
  menuItems_every: MenuItemWhereInput
  menuItems_none: MenuItemWhereInput
  menuItems_some: MenuItemWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [MenuHeaderWhereInput!]
  OR: [MenuHeaderWhereInput!]
  subHeader: String
  subHeader_contains: String
  subHeader_ends_with: String
  subHeader_gt: String
  subHeader_gte: String
  subHeader_in: [String!]
  subHeader_lt: String
  subHeader_lte: String
  subHeader_not: String
  subHeader_not_contains: String
  subHeader_not_ends_with: String
  subHeader_not_in: [String!]
  subHeader_not_starts_with: String
  subHeader_starts_with: String
}

type MenuItem {
  basePrice: String!
  description: String
  id: ID!
  image: String
  largeImage: String
  menu: Menu
  menuHeader: MenuHeader
  name: String!
  options(after: String, before: String, first: Int, last: Int, orderBy: MenuChoiceOrderByInput, skip: Int, where: MenuChoiceWhereInput): [MenuChoice!]
}

enum MenuItemOrderByInput {
  basePrice_ASC
  basePrice_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input MenuItemWhereInput {
  AND: [MenuItemWhereInput!]
  basePrice: String
  basePrice_contains: String
  basePrice_ends_with: String
  basePrice_gt: String
  basePrice_gte: String
  basePrice_in: [String!]
  basePrice_lt: String
  basePrice_lte: String
  basePrice_not: String
  basePrice_not_contains: String
  basePrice_not_ends_with: String
  basePrice_not_in: [String!]
  basePrice_not_starts_with: String
  basePrice_starts_with: String
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  image: String
  image_contains: String
  image_ends_with: String
  image_gt: String
  image_gte: String
  image_in: [String!]
  image_lt: String
  image_lte: String
  image_not: String
  image_not_contains: String
  image_not_ends_with: String
  image_not_in: [String!]
  image_not_starts_with: String
  image_starts_with: String
  largeImage: String
  largeImage_contains: String
  largeImage_ends_with: String
  largeImage_gt: String
  largeImage_gte: String
  largeImage_in: [String!]
  largeImage_lt: String
  largeImage_lte: String
  largeImage_not: String
  largeImage_not_contains: String
  largeImage_not_ends_with: String
  largeImage_not_in: [String!]
  largeImage_not_starts_with: String
  largeImage_starts_with: String
  menu: MenuWhereInput
  menuHeader: MenuHeaderWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [MenuItemWhereInput!]
  options_every: MenuChoiceWhereInput
  options_none: MenuChoiceWhereInput
  options_some: MenuChoiceWhereInput
  OR: [MenuItemWhereInput!]
}

enum MenuOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  published_ASC
  published_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type MenuSelection {
  id: ID!
  menuChoice: MenuChoice
  name: String!
  selected: Boolean
  valueAdd: String
}

enum MenuSelectionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  selected_ASC
  selected_DESC
  updatedAt_ASC
  updatedAt_DESC
  valueAdd_ASC
  valueAdd_DESC
}

input MenuSelectionWhereInput {
  AND: [MenuSelectionWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  menuChoice: MenuChoiceWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [MenuSelectionWhereInput!]
  OR: [MenuSelectionWhereInput!]
  selected: Boolean
  selected_not: Boolean
  valueAdd: String
  valueAdd_contains: String
  valueAdd_ends_with: String
  valueAdd_gt: String
  valueAdd_gte: String
  valueAdd_in: [String!]
  valueAdd_lt: String
  valueAdd_lte: String
  valueAdd_not: String
  valueAdd_not_contains: String
  valueAdd_not_ends_with: String
  valueAdd_not_in: [String!]
  valueAdd_not_starts_with: String
  valueAdd_starts_with: String
}

input MenuWhereInput {
  AND: [MenuWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  menuItems_every: MenuItemWhereInput
  menuItems_none: MenuItemWhereInput
  menuItems_some: MenuItemWhereInput
  NOT: [MenuWhereInput!]
  OR: [MenuWhereInput!]
  organization: OrganizationWhereInput
  published: Boolean
  published_not: Boolean
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Mutation {
  createMenu(id: ID, title: String!): Menu
  createOrganization(name: String!): Organization
  loginUser(email: String!, password: String!): AuthPayload
  registerUser(email: String!, name: String, password: String!): AuthPayload
}

type Organization {
  id: ID!
  menus(after: String, before: String, first: Int, last: Int, orderBy: MenuOrderByInput, skip: Int, where: MenuWhereInput): [Menu!]
  name: String!
  owner: User!
  permissions: Permission
}

input OrganizationWhereInput {
  AND: [OrganizationWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  menus_every: MenuWhereInput
  menus_none: MenuWhereInput
  menus_some: MenuWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OrganizationWhereInput!]
  OR: [OrganizationWhereInput!]
  owner: UserWhereInput
  permissions: Permission
  permissions_in: [Permission!]
  permissions_not: Permission
  permissions_not_in: [Permission!]
}

enum Permission {
  ADMIN
  CUSTOMER
  DEVELOPER
  OWNER
}

type Query {
  me: User
}

"""The user of the application"""
type User {
  email: String!
  id: ID!
  name: String
  organizations: [Organization!]
}

input UserWhereInput {
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  menus_every: MenuWhereInput
  menus_none: MenuWhereInput
  menus_some: MenuWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  organizations_every: OrganizationWhereInput
  organizations_none: OrganizationWhereInput
  organizations_some: OrganizationWhereInput
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  resetToken: String
  resetToken_contains: String
  resetToken_ends_with: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_not: String
  resetToken_not_contains: String
  resetToken_not_ends_with: String
  resetToken_not_in: [String!]
  resetToken_not_starts_with: String
  resetToken_starts_with: String
  resetTokenExpiry: Float
  resetTokenExpiry_gt: Float
  resetTokenExpiry_gte: Float
  resetTokenExpiry_in: [Float!]
  resetTokenExpiry_lt: Float
  resetTokenExpiry_lte: Float
  resetTokenExpiry_not: Float
  resetTokenExpiry_not_in: [Float!]
}
