/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Organization: OrganizationObject
      Menu: MenuObject
      MenuItem: MenuItemObject
      MenuChoice: MenuChoiceObject
      MenuSelection: MenuSelectionObject
      MenuHeader: MenuHeaderObject
      Table: TableObject
      Cart: CartObject
      Order: OrderObject
      OrderItem: OrderItemObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      OrganizationConnection: OrganizationConnectionObject
      OrganizationEdge: OrganizationEdgeObject
      AggregateOrganization: AggregateOrganizationObject
      MenuConnection: MenuConnectionObject
      MenuEdge: MenuEdgeObject
      AggregateMenu: AggregateMenuObject
      MenuItemConnection: MenuItemConnectionObject
      MenuItemEdge: MenuItemEdgeObject
      AggregateMenuItem: AggregateMenuItemObject
      MenuChoiceConnection: MenuChoiceConnectionObject
      MenuChoiceEdge: MenuChoiceEdgeObject
      AggregateMenuChoice: AggregateMenuChoiceObject
      MenuSelectionConnection: MenuSelectionConnectionObject
      MenuSelectionEdge: MenuSelectionEdgeObject
      AggregateMenuSelection: AggregateMenuSelectionObject
      MenuHeaderConnection: MenuHeaderConnectionObject
      MenuHeaderEdge: MenuHeaderEdgeObject
      AggregateMenuHeader: AggregateMenuHeaderObject
      TableConnection: TableConnectionObject
      TableEdge: TableEdgeObject
      AggregateTable: AggregateTableObject
      CartConnection: CartConnectionObject
      CartEdge: CartEdgeObject
      AggregateCart: AggregateCartObject
      OrderConnection: OrderConnectionObject
      OrderEdge: OrderEdgeObject
      AggregateOrder: AggregateOrderObject
      OrderItemConnection: OrderItemConnectionObject
      OrderItemEdge: OrderItemEdgeObject
      AggregateOrderItem: AggregateOrderItemObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      OrganizationSubscriptionPayload: OrganizationSubscriptionPayloadObject
      OrganizationPreviousValues: OrganizationPreviousValuesObject
      MenuSubscriptionPayload: MenuSubscriptionPayloadObject
      MenuPreviousValues: MenuPreviousValuesObject
      MenuItemSubscriptionPayload: MenuItemSubscriptionPayloadObject
      MenuItemPreviousValues: MenuItemPreviousValuesObject
      MenuChoiceSubscriptionPayload: MenuChoiceSubscriptionPayloadObject
      MenuChoicePreviousValues: MenuChoicePreviousValuesObject
      MenuSelectionSubscriptionPayload: MenuSelectionSubscriptionPayloadObject
      MenuSelectionPreviousValues: MenuSelectionPreviousValuesObject
      MenuHeaderSubscriptionPayload: MenuHeaderSubscriptionPayloadObject
      MenuHeaderPreviousValues: MenuHeaderPreviousValuesObject
      TableSubscriptionPayload: TableSubscriptionPayloadObject
      TablePreviousValues: TablePreviousValuesObject
      CartSubscriptionPayload: CartSubscriptionPayloadObject
      CartPreviousValues: CartPreviousValuesObject
      OrderSubscriptionPayload: OrderSubscriptionPayloadObject
      OrderPreviousValues: OrderPreviousValuesObject
      OrderItemSubscriptionPayload: OrderItemSubscriptionPayloadObject
      OrderItemPreviousValues: OrderItemPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Organization: OrganizationFieldDetails
      Menu: MenuFieldDetails
      MenuItem: MenuItemFieldDetails
      MenuChoice: MenuChoiceFieldDetails
      MenuSelection: MenuSelectionFieldDetails
      MenuHeader: MenuHeaderFieldDetails
      Table: TableFieldDetails
      Cart: CartFieldDetails
      Order: OrderFieldDetails
      OrderItem: OrderItemFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      OrganizationConnection: OrganizationConnectionFieldDetails
      OrganizationEdge: OrganizationEdgeFieldDetails
      AggregateOrganization: AggregateOrganizationFieldDetails
      MenuConnection: MenuConnectionFieldDetails
      MenuEdge: MenuEdgeFieldDetails
      AggregateMenu: AggregateMenuFieldDetails
      MenuItemConnection: MenuItemConnectionFieldDetails
      MenuItemEdge: MenuItemEdgeFieldDetails
      AggregateMenuItem: AggregateMenuItemFieldDetails
      MenuChoiceConnection: MenuChoiceConnectionFieldDetails
      MenuChoiceEdge: MenuChoiceEdgeFieldDetails
      AggregateMenuChoice: AggregateMenuChoiceFieldDetails
      MenuSelectionConnection: MenuSelectionConnectionFieldDetails
      MenuSelectionEdge: MenuSelectionEdgeFieldDetails
      AggregateMenuSelection: AggregateMenuSelectionFieldDetails
      MenuHeaderConnection: MenuHeaderConnectionFieldDetails
      MenuHeaderEdge: MenuHeaderEdgeFieldDetails
      AggregateMenuHeader: AggregateMenuHeaderFieldDetails
      TableConnection: TableConnectionFieldDetails
      TableEdge: TableEdgeFieldDetails
      AggregateTable: AggregateTableFieldDetails
      CartConnection: CartConnectionFieldDetails
      CartEdge: CartEdgeFieldDetails
      AggregateCart: AggregateCartFieldDetails
      OrderConnection: OrderConnectionFieldDetails
      OrderEdge: OrderEdgeFieldDetails
      AggregateOrder: AggregateOrderFieldDetails
      OrderItemConnection: OrderItemConnectionFieldDetails
      OrderItemEdge: OrderItemEdgeFieldDetails
      AggregateOrderItem: AggregateOrderItemFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      OrganizationSubscriptionPayload: OrganizationSubscriptionPayloadFieldDetails
      OrganizationPreviousValues: OrganizationPreviousValuesFieldDetails
      MenuSubscriptionPayload: MenuSubscriptionPayloadFieldDetails
      MenuPreviousValues: MenuPreviousValuesFieldDetails
      MenuItemSubscriptionPayload: MenuItemSubscriptionPayloadFieldDetails
      MenuItemPreviousValues: MenuItemPreviousValuesFieldDetails
      MenuChoiceSubscriptionPayload: MenuChoiceSubscriptionPayloadFieldDetails
      MenuChoicePreviousValues: MenuChoicePreviousValuesFieldDetails
      MenuSelectionSubscriptionPayload: MenuSelectionSubscriptionPayloadFieldDetails
      MenuSelectionPreviousValues: MenuSelectionPreviousValuesFieldDetails
      MenuHeaderSubscriptionPayload: MenuHeaderSubscriptionPayloadFieldDetails
      MenuHeaderPreviousValues: MenuHeaderPreviousValuesFieldDetails
      TableSubscriptionPayload: TableSubscriptionPayloadFieldDetails
      TablePreviousValues: TablePreviousValuesFieldDetails
      CartSubscriptionPayload: CartSubscriptionPayloadFieldDetails
      CartPreviousValues: CartPreviousValuesFieldDetails
      OrderSubscriptionPayload: OrderSubscriptionPayloadFieldDetails
      OrderPreviousValues: OrderPreviousValuesFieldDetails
      OrderItemSubscriptionPayload: OrderItemSubscriptionPayloadFieldDetails
      OrderItemPreviousValues: OrderItemPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      OrganizationWhereInput: OrganizationWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      TableWhereInput: TableWhereInputInputObject
      CartWhereInput: CartWhereInputInputObject
      OrderWhereInput: OrderWhereInputInputObject
      OrderItemWhereInput: OrderItemWhereInputInputObject
      MenuWhereInput: MenuWhereInputInputObject
      MenuItemWhereInput: MenuItemWhereInputInputObject
      MenuChoiceWhereInput: MenuChoiceWhereInputInputObject
      MenuSelectionWhereInput: MenuSelectionWhereInputInputObject
      MenuHeaderWhereInput: MenuHeaderWhereInputInputObject
      OrganizationWhereUniqueInput: OrganizationWhereUniqueInputInputObject
      MenuWhereUniqueInput: MenuWhereUniqueInputInputObject
      MenuItemWhereUniqueInput: MenuItemWhereUniqueInputInputObject
      MenuChoiceWhereUniqueInput: MenuChoiceWhereUniqueInputInputObject
      MenuSelectionWhereUniqueInput: MenuSelectionWhereUniqueInputInputObject
      MenuHeaderWhereUniqueInput: MenuHeaderWhereUniqueInputInputObject
      TableWhereUniqueInput: TableWhereUniqueInputInputObject
      CartWhereUniqueInput: CartWhereUniqueInputInputObject
      OrderWhereUniqueInput: OrderWhereUniqueInputInputObject
      OrderItemWhereUniqueInput: OrderItemWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      OrganizationCreateManyInput: OrganizationCreateManyInputInputObject
      OrganizationCreateInput: OrganizationCreateInputInputObject
      UserCreateManyInput: UserCreateManyInputInputObject
      MenuCreateManyWithoutOrganizationInput: MenuCreateManyWithoutOrganizationInputInputObject
      MenuCreateWithoutOrganizationInput: MenuCreateWithoutOrganizationInputInputObject
      MenuItemCreateManyWithoutMenuInput: MenuItemCreateManyWithoutMenuInputInputObject
      MenuItemCreateWithoutMenuInput: MenuItemCreateWithoutMenuInputInputObject
      MenuChoiceCreateManyInput: MenuChoiceCreateManyInputInputObject
      MenuChoiceCreateInput: MenuChoiceCreateInputInputObject
      MenuSelectionCreateManyWithoutMenuChoiceInput: MenuSelectionCreateManyWithoutMenuChoiceInputInputObject
      MenuSelectionCreateWithoutMenuChoiceInput: MenuSelectionCreateWithoutMenuChoiceInputInputObject
      MenuHeaderCreateOneWithoutMenuItemsInput: MenuHeaderCreateOneWithoutMenuItemsInputInputObject
      MenuHeaderCreateWithoutMenuItemsInput: MenuHeaderCreateWithoutMenuItemsInputInputObject
      MenuCreateOneInput: MenuCreateOneInputInputObject
      MenuCreateInput: MenuCreateInputInputObject
      OrganizationCreateOneWithoutMenusInput: OrganizationCreateOneWithoutMenusInputInputObject
      OrganizationCreateWithoutMenusInput: OrganizationCreateWithoutMenusInputInputObject
      UserCreateOneInput: UserCreateOneInputInputObject
      TableCreateOneWithoutCustomersInput: TableCreateOneWithoutCustomersInputInputObject
      TableCreateWithoutCustomersInput: TableCreateWithoutCustomersInputInputObject
      CartCreateManyWithoutTableInput: CartCreateManyWithoutTableInputInputObject
      CartCreateWithoutTableInput: CartCreateWithoutTableInputInputObject
      OrderCreateManyInput: OrderCreateManyInputInputObject
      OrderCreateInput: OrderCreateInputInputObject
      OrderItemCreateManyInput: OrderItemCreateManyInputInputObject
      OrderItemCreateInput: OrderItemCreateInputInputObject
      UserCreateOneWithoutOrdersInput: UserCreateOneWithoutOrdersInputInputObject
      UserCreateWithoutOrdersInput: UserCreateWithoutOrdersInputInputObject
      CartCreateOneWithoutCustomerInput: CartCreateOneWithoutCustomerInputInputObject
      CartCreateWithoutCustomerInput: CartCreateWithoutCustomerInputInputObject
      TableCreateOneWithoutCartsInput: TableCreateOneWithoutCartsInputInputObject
      TableCreateWithoutCartsInput: TableCreateWithoutCartsInputInputObject
      UserCreateManyWithoutTableInput: UserCreateManyWithoutTableInputInputObject
      UserCreateWithoutTableInput: UserCreateWithoutTableInputInputObject
      OrderCreateManyWithoutCustomerInput: OrderCreateManyWithoutCustomerInputInputObject
      OrderCreateWithoutCustomerInput: OrderCreateWithoutCustomerInputInputObject
      UserCreateOneWithoutCartInput: UserCreateOneWithoutCartInputInputObject
      UserCreateWithoutCartInput: UserCreateWithoutCartInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      OrganizationUpdateManyInput: OrganizationUpdateManyInputInputObject
      OrganizationUpdateWithWhereUniqueNestedInput: OrganizationUpdateWithWhereUniqueNestedInputInputObject
      OrganizationUpdateDataInput: OrganizationUpdateDataInputInputObject
      UserUpdateManyInput: UserUpdateManyInputInputObject
      UserUpdateWithWhereUniqueNestedInput: UserUpdateWithWhereUniqueNestedInputInputObject
      UserUpdateDataInput: UserUpdateDataInputInputObject
      TableUpdateOneWithoutCustomersInput: TableUpdateOneWithoutCustomersInputInputObject
      TableUpdateWithoutCustomersDataInput: TableUpdateWithoutCustomersDataInputInputObject
      CartUpdateManyWithoutTableInput: CartUpdateManyWithoutTableInputInputObject
      CartUpdateWithWhereUniqueWithoutTableInput: CartUpdateWithWhereUniqueWithoutTableInputInputObject
      CartUpdateWithoutTableDataInput: CartUpdateWithoutTableDataInputInputObject
      OrderUpdateManyInput: OrderUpdateManyInputInputObject
      OrderUpdateWithWhereUniqueNestedInput: OrderUpdateWithWhereUniqueNestedInputInputObject
      OrderUpdateDataInput: OrderUpdateDataInputInputObject
      OrderItemUpdateManyInput: OrderItemUpdateManyInputInputObject
      OrderItemUpdateWithWhereUniqueNestedInput: OrderItemUpdateWithWhereUniqueNestedInputInputObject
      OrderItemUpdateDataInput: OrderItemUpdateDataInputInputObject
      UserUpdateOneRequiredInput: UserUpdateOneRequiredInputInputObject
      UserUpsertNestedInput: UserUpsertNestedInputInputObject
      OrderItemUpsertWithWhereUniqueNestedInput: OrderItemUpsertWithWhereUniqueNestedInputInputObject
      OrderItemScalarWhereInput: OrderItemScalarWhereInputInputObject
      OrderItemUpdateManyWithWhereNestedInput: OrderItemUpdateManyWithWhereNestedInputInputObject
      OrderItemUpdateManyDataInput: OrderItemUpdateManyDataInputInputObject
      UserUpdateOneRequiredWithoutOrdersInput: UserUpdateOneRequiredWithoutOrdersInputInputObject
      UserUpdateWithoutOrdersDataInput: UserUpdateWithoutOrdersDataInputInputObject
      CartUpdateOneWithoutCustomerInput: CartUpdateOneWithoutCustomerInputInputObject
      CartUpdateWithoutCustomerDataInput: CartUpdateWithoutCustomerDataInputInputObject
      TableUpdateOneWithoutCartsInput: TableUpdateOneWithoutCartsInputInputObject
      TableUpdateWithoutCartsDataInput: TableUpdateWithoutCartsDataInputInputObject
      UserUpdateManyWithoutTableInput: UserUpdateManyWithoutTableInputInputObject
      UserUpdateWithWhereUniqueWithoutTableInput: UserUpdateWithWhereUniqueWithoutTableInputInputObject
      UserUpdateWithoutTableDataInput: UserUpdateWithoutTableDataInputInputObject
      OrderUpdateManyWithoutCustomerInput: OrderUpdateManyWithoutCustomerInputInputObject
      OrderUpdateWithWhereUniqueWithoutCustomerInput: OrderUpdateWithWhereUniqueWithoutCustomerInputInputObject
      OrderUpdateWithoutCustomerDataInput: OrderUpdateWithoutCustomerDataInputInputObject
      OrderUpsertWithWhereUniqueWithoutCustomerInput: OrderUpsertWithWhereUniqueWithoutCustomerInputInputObject
      OrderScalarWhereInput: OrderScalarWhereInputInputObject
      OrderUpdateManyWithWhereNestedInput: OrderUpdateManyWithWhereNestedInputInputObject
      OrderUpdateManyDataInput: OrderUpdateManyDataInputInputObject
      UserUpsertWithWhereUniqueWithoutTableInput: UserUpsertWithWhereUniqueWithoutTableInputInputObject
      UserScalarWhereInput: UserScalarWhereInputInputObject
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInputInputObject
      UserUpdateManyDataInput: UserUpdateManyDataInputInputObject
      TableUpsertWithoutCartsInput: TableUpsertWithoutCartsInputInputObject
      CartUpsertWithoutCustomerInput: CartUpsertWithoutCustomerInputInputObject
      UserUpsertWithoutOrdersInput: UserUpsertWithoutOrdersInputInputObject
      OrderUpsertWithWhereUniqueNestedInput: OrderUpsertWithWhereUniqueNestedInputInputObject
      UserUpdateOneRequiredWithoutCartInput: UserUpdateOneRequiredWithoutCartInputInputObject
      UserUpdateWithoutCartDataInput: UserUpdateWithoutCartDataInputInputObject
      UserUpsertWithoutCartInput: UserUpsertWithoutCartInputInputObject
      CartUpsertWithWhereUniqueWithoutTableInput: CartUpsertWithWhereUniqueWithoutTableInputInputObject
      CartScalarWhereInput: CartScalarWhereInputInputObject
      CartUpdateManyWithWhereNestedInput: CartUpdateManyWithWhereNestedInputInputObject
      CartUpdateManyDataInput: CartUpdateManyDataInputInputObject
      TableUpsertWithoutCustomersInput: TableUpsertWithoutCustomersInputInputObject
      UserUpsertWithWhereUniqueNestedInput: UserUpsertWithWhereUniqueNestedInputInputObject
      MenuUpdateManyWithoutOrganizationInput: MenuUpdateManyWithoutOrganizationInputInputObject
      MenuUpdateWithWhereUniqueWithoutOrganizationInput: MenuUpdateWithWhereUniqueWithoutOrganizationInputInputObject
      MenuUpdateWithoutOrganizationDataInput: MenuUpdateWithoutOrganizationDataInputInputObject
      MenuItemUpdateManyWithoutMenuInput: MenuItemUpdateManyWithoutMenuInputInputObject
      MenuItemUpdateWithWhereUniqueWithoutMenuInput: MenuItemUpdateWithWhereUniqueWithoutMenuInputInputObject
      MenuItemUpdateWithoutMenuDataInput: MenuItemUpdateWithoutMenuDataInputInputObject
      MenuChoiceUpdateManyInput: MenuChoiceUpdateManyInputInputObject
      MenuChoiceUpdateWithWhereUniqueNestedInput: MenuChoiceUpdateWithWhereUniqueNestedInputInputObject
      MenuChoiceUpdateDataInput: MenuChoiceUpdateDataInputInputObject
      MenuSelectionUpdateManyWithoutMenuChoiceInput: MenuSelectionUpdateManyWithoutMenuChoiceInputInputObject
      MenuSelectionUpdateWithWhereUniqueWithoutMenuChoiceInput: MenuSelectionUpdateWithWhereUniqueWithoutMenuChoiceInputInputObject
      MenuSelectionUpdateWithoutMenuChoiceDataInput: MenuSelectionUpdateWithoutMenuChoiceDataInputInputObject
      MenuSelectionUpsertWithWhereUniqueWithoutMenuChoiceInput: MenuSelectionUpsertWithWhereUniqueWithoutMenuChoiceInputInputObject
      MenuSelectionScalarWhereInput: MenuSelectionScalarWhereInputInputObject
      MenuSelectionUpdateManyWithWhereNestedInput: MenuSelectionUpdateManyWithWhereNestedInputInputObject
      MenuSelectionUpdateManyDataInput: MenuSelectionUpdateManyDataInputInputObject
      MenuChoiceUpsertWithWhereUniqueNestedInput: MenuChoiceUpsertWithWhereUniqueNestedInputInputObject
      MenuChoiceScalarWhereInput: MenuChoiceScalarWhereInputInputObject
      MenuChoiceUpdateManyWithWhereNestedInput: MenuChoiceUpdateManyWithWhereNestedInputInputObject
      MenuChoiceUpdateManyDataInput: MenuChoiceUpdateManyDataInputInputObject
      MenuHeaderUpdateOneWithoutMenuItemsInput: MenuHeaderUpdateOneWithoutMenuItemsInputInputObject
      MenuHeaderUpdateWithoutMenuItemsDataInput: MenuHeaderUpdateWithoutMenuItemsDataInputInputObject
      MenuUpdateOneInput: MenuUpdateOneInputInputObject
      MenuUpdateDataInput: MenuUpdateDataInputInputObject
      OrganizationUpdateOneRequiredWithoutMenusInput: OrganizationUpdateOneRequiredWithoutMenusInputInputObject
      OrganizationUpdateWithoutMenusDataInput: OrganizationUpdateWithoutMenusDataInputInputObject
      OrganizationUpsertWithoutMenusInput: OrganizationUpsertWithoutMenusInputInputObject
      MenuUpsertNestedInput: MenuUpsertNestedInputInputObject
      MenuHeaderUpsertWithoutMenuItemsInput: MenuHeaderUpsertWithoutMenuItemsInputInputObject
      MenuItemUpsertWithWhereUniqueWithoutMenuInput: MenuItemUpsertWithWhereUniqueWithoutMenuInputInputObject
      MenuItemScalarWhereInput: MenuItemScalarWhereInputInputObject
      MenuItemUpdateManyWithWhereNestedInput: MenuItemUpdateManyWithWhereNestedInputInputObject
      MenuItemUpdateManyDataInput: MenuItemUpdateManyDataInputInputObject
      MenuUpsertWithWhereUniqueWithoutOrganizationInput: MenuUpsertWithWhereUniqueWithoutOrganizationInputInputObject
      MenuScalarWhereInput: MenuScalarWhereInputInputObject
      MenuUpdateManyWithWhereNestedInput: MenuUpdateManyWithWhereNestedInputInputObject
      MenuUpdateManyDataInput: MenuUpdateManyDataInputInputObject
      OrganizationUpsertWithWhereUniqueNestedInput: OrganizationUpsertWithWhereUniqueNestedInputInputObject
      OrganizationScalarWhereInput: OrganizationScalarWhereInputInputObject
      OrganizationUpdateManyWithWhereNestedInput: OrganizationUpdateManyWithWhereNestedInputInputObject
      OrganizationUpdateManyDataInput: OrganizationUpdateManyDataInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      OrganizationUpdateInput: OrganizationUpdateInputInputObject
      OrganizationUpdateManyMutationInput: OrganizationUpdateManyMutationInputInputObject
      MenuUpdateInput: MenuUpdateInputInputObject
      MenuUpdateManyMutationInput: MenuUpdateManyMutationInputInputObject
      MenuItemCreateInput: MenuItemCreateInputInputObject
      MenuCreateOneWithoutMenuItemsInput: MenuCreateOneWithoutMenuItemsInputInputObject
      MenuCreateWithoutMenuItemsInput: MenuCreateWithoutMenuItemsInputInputObject
      MenuItemUpdateInput: MenuItemUpdateInputInputObject
      MenuUpdateOneWithoutMenuItemsInput: MenuUpdateOneWithoutMenuItemsInputInputObject
      MenuUpdateWithoutMenuItemsDataInput: MenuUpdateWithoutMenuItemsDataInputInputObject
      MenuUpsertWithoutMenuItemsInput: MenuUpsertWithoutMenuItemsInputInputObject
      MenuItemUpdateManyMutationInput: MenuItemUpdateManyMutationInputInputObject
      MenuChoiceUpdateInput: MenuChoiceUpdateInputInputObject
      MenuChoiceUpdateManyMutationInput: MenuChoiceUpdateManyMutationInputInputObject
      MenuSelectionCreateInput: MenuSelectionCreateInputInputObject
      MenuChoiceCreateOneWithoutSelectionsInput: MenuChoiceCreateOneWithoutSelectionsInputInputObject
      MenuChoiceCreateWithoutSelectionsInput: MenuChoiceCreateWithoutSelectionsInputInputObject
      MenuSelectionUpdateInput: MenuSelectionUpdateInputInputObject
      MenuChoiceUpdateOneWithoutSelectionsInput: MenuChoiceUpdateOneWithoutSelectionsInputInputObject
      MenuChoiceUpdateWithoutSelectionsDataInput: MenuChoiceUpdateWithoutSelectionsDataInputInputObject
      MenuChoiceUpsertWithoutSelectionsInput: MenuChoiceUpsertWithoutSelectionsInputInputObject
      MenuSelectionUpdateManyMutationInput: MenuSelectionUpdateManyMutationInputInputObject
      MenuHeaderCreateInput: MenuHeaderCreateInputInputObject
      MenuItemCreateManyWithoutMenuHeaderInput: MenuItemCreateManyWithoutMenuHeaderInputInputObject
      MenuItemCreateWithoutMenuHeaderInput: MenuItemCreateWithoutMenuHeaderInputInputObject
      MenuHeaderUpdateInput: MenuHeaderUpdateInputInputObject
      MenuItemUpdateManyWithoutMenuHeaderInput: MenuItemUpdateManyWithoutMenuHeaderInputInputObject
      MenuItemUpdateWithWhereUniqueWithoutMenuHeaderInput: MenuItemUpdateWithWhereUniqueWithoutMenuHeaderInputInputObject
      MenuItemUpdateWithoutMenuHeaderDataInput: MenuItemUpdateWithoutMenuHeaderDataInputInputObject
      MenuItemUpsertWithWhereUniqueWithoutMenuHeaderInput: MenuItemUpsertWithWhereUniqueWithoutMenuHeaderInputInputObject
      MenuHeaderUpdateManyMutationInput: MenuHeaderUpdateManyMutationInputInputObject
      TableCreateInput: TableCreateInputInputObject
      TableUpdateInput: TableUpdateInputInputObject
      CartCreateInput: CartCreateInputInputObject
      CartUpdateInput: CartUpdateInputInputObject
      CartUpdateManyMutationInput: CartUpdateManyMutationInputInputObject
      OrderUpdateInput: OrderUpdateInputInputObject
      OrderUpdateManyMutationInput: OrderUpdateManyMutationInputInputObject
      OrderItemUpdateInput: OrderItemUpdateInputInputObject
      OrderItemUpdateManyMutationInput: OrderItemUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      OrganizationSubscriptionWhereInput: OrganizationSubscriptionWhereInputInputObject
      MenuSubscriptionWhereInput: MenuSubscriptionWhereInputInputObject
      MenuItemSubscriptionWhereInput: MenuItemSubscriptionWhereInputInputObject
      MenuChoiceSubscriptionWhereInput: MenuChoiceSubscriptionWhereInputInputObject
      MenuSelectionSubscriptionWhereInput: MenuSelectionSubscriptionWhereInputInputObject
      MenuHeaderSubscriptionWhereInput: MenuHeaderSubscriptionWhereInputInputObject
      TableSubscriptionWhereInput: TableSubscriptionWhereInputInputObject
      CartSubscriptionWhereInput: CartSubscriptionWhereInputInputObject
      OrderSubscriptionWhereInput: OrderSubscriptionWhereInputInputObject
      OrderItemSubscriptionWhereInput: OrderItemSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    Permission: PermissionValues,
    OrganizationOrderByInput: OrganizationOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    MenuOrderByInput: MenuOrderByInputValues,
    MenuItemOrderByInput: MenuItemOrderByInputValues,
    MenuChoiceOrderByInput: MenuChoiceOrderByInputValues,
    MenuSelectionOrderByInput: MenuSelectionOrderByInputValues,
    CartOrderByInput: CartOrderByInputValues,
    OrderOrderByInput: OrderOrderByInputValues,
    OrderItemOrderByInput: OrderItemOrderByInputValues,
    MenuHeaderOrderByInput: MenuHeaderOrderByInputValues,
    TableOrderByInput: TableOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'organization', args?: QueryOrganizationArgs[] | false, alias?: string  } 
  | { name: 'organizations', args?: QueryOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'organizationsConnection', args?: QueryOrganizationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'menu', args?: QueryMenuArgs[] | false, alias?: string  } 
  | { name: 'menus', args?: QueryMenusArgs[] | false, alias?: string  } 
  | { name: 'menusConnection', args?: QueryMenusConnectionArgs[] | false, alias?: string  } 
  | { name: 'menuItem', args?: QueryMenuItemArgs[] | false, alias?: string  } 
  | { name: 'menuItems', args?: QueryMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'menuItemsConnection', args?: QueryMenuItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'menuChoice', args?: QueryMenuChoiceArgs[] | false, alias?: string  } 
  | { name: 'menuChoices', args?: QueryMenuChoicesArgs[] | false, alias?: string  } 
  | { name: 'menuChoicesConnection', args?: QueryMenuChoicesConnectionArgs[] | false, alias?: string  } 
  | { name: 'menuSelection', args?: QueryMenuSelectionArgs[] | false, alias?: string  } 
  | { name: 'menuSelections', args?: QueryMenuSelectionsArgs[] | false, alias?: string  } 
  | { name: 'menuSelectionsConnection', args?: QueryMenuSelectionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'menuHeader', args?: QueryMenuHeaderArgs[] | false, alias?: string  } 
  | { name: 'menuHeaders', args?: QueryMenuHeadersArgs[] | false, alias?: string  } 
  | { name: 'menuHeadersConnection', args?: QueryMenuHeadersConnectionArgs[] | false, alias?: string  } 
  | { name: 'table', args?: QueryTableArgs[] | false, alias?: string  } 
  | { name: 'tables', args?: QueryTablesArgs[] | false, alias?: string  } 
  | { name: 'tablesConnection', args?: QueryTablesConnectionArgs[] | false, alias?: string  } 
  | { name: 'cart', args?: QueryCartArgs[] | false, alias?: string  } 
  | { name: 'carts', args?: QueryCartsArgs[] | false, alias?: string  } 
  | { name: 'cartsConnection', args?: QueryCartsConnectionArgs[] | false, alias?: string  } 
  | { name: 'order', args?: QueryOrderArgs[] | false, alias?: string  } 
  | { name: 'orders', args?: QueryOrdersArgs[] | false, alias?: string  } 
  | { name: 'ordersConnection', args?: QueryOrdersConnectionArgs[] | false, alias?: string  } 
  | { name: 'orderItem', args?: QueryOrderItemArgs[] | false, alias?: string  } 
  | { name: 'orderItems', args?: QueryOrderItemsArgs[] | false, alias?: string  } 
  | { name: 'orderItemsConnection', args?: QueryOrderItemsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'organization'
  | 'organizations'
  | 'organizationsConnection'
  | 'menu'
  | 'menus'
  | 'menusConnection'
  | 'menuItem'
  | 'menuItems'
  | 'menuItemsConnection'
  | 'menuChoice'
  | 'menuChoices'
  | 'menuChoicesConnection'
  | 'menuSelection'
  | 'menuSelections'
  | 'menuSelectionsConnection'
  | 'menuHeader'
  | 'menuHeaders'
  | 'menuHeadersConnection'
  | 'table'
  | 'tables'
  | 'tablesConnection'
  | 'cart'
  | 'carts'
  | 'cartsConnection'
  | 'order'
  | 'orders'
  | 'ordersConnection'
  | 'orderItem'
  | 'orderItems'
  | 'orderItemsConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationArgs =
  | 'where'
type QueryOrganizationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuArgs =
  | 'where'
type QueryMenusArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenusConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuItemArgs =
  | 'where'
type QueryMenuItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuChoiceArgs =
  | 'where'
type QueryMenuChoicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuChoicesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuSelectionArgs =
  | 'where'
type QueryMenuSelectionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuSelectionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuHeaderArgs =
  | 'where'
type QueryMenuHeadersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuHeadersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTableArgs =
  | 'where'
type QueryTablesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTablesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCartArgs =
  | 'where'
type QueryCartsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCartsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderArgs =
  | 'where'
type QueryOrdersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrdersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemArgs =
  | 'where'
type QueryOrderItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  organization: {
    type: 'Organization'
    args: Record<QueryOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  organizations: {
    type: 'Organization'
    args: Record<QueryOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationWhereInput | null, orderBy?: prisma.OrganizationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization[]> | prisma.Organization[]
  }
  organizationsConnection: {
    type: 'OrganizationConnection'
    args: Record<QueryOrganizationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationWhereInput | null, orderBy?: prisma.OrganizationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationConnection> | prisma.OrganizationConnection
  }
  menu: {
    type: 'Menu'
    args: Record<QueryMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MenuWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  menus: {
    type: 'Menu'
    args: Record<QueryMenusArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuWhereInput | null, orderBy?: prisma.MenuOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu[]> | prisma.Menu[]
  }
  menusConnection: {
    type: 'MenuConnection'
    args: Record<QueryMenusConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuWhereInput | null, orderBy?: prisma.MenuOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuConnection> | prisma.MenuConnection
  }
  menuItem: {
    type: 'MenuItem'
    args: Record<QueryMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MenuItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem | null> | prisma.MenuItem | null
  }
  menuItems: {
    type: 'MenuItem'
    args: Record<QueryMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuItemWhereInput | null, orderBy?: prisma.MenuItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem[]> | prisma.MenuItem[]
  }
  menuItemsConnection: {
    type: 'MenuItemConnection'
    args: Record<QueryMenuItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuItemWhereInput | null, orderBy?: prisma.MenuItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItemConnection> | prisma.MenuItemConnection
  }
  menuChoice: {
    type: 'MenuChoice'
    args: Record<QueryMenuChoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MenuChoiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice | null> | prisma.MenuChoice | null
  }
  menuChoices: {
    type: 'MenuChoice'
    args: Record<QueryMenuChoicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuChoiceWhereInput | null, orderBy?: prisma.MenuChoiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice[]> | prisma.MenuChoice[]
  }
  menuChoicesConnection: {
    type: 'MenuChoiceConnection'
    args: Record<QueryMenuChoicesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuChoiceWhereInput | null, orderBy?: prisma.MenuChoiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoiceConnection> | prisma.MenuChoiceConnection
  }
  menuSelection: {
    type: 'MenuSelection'
    args: Record<QueryMenuSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MenuSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection | null> | prisma.MenuSelection | null
  }
  menuSelections: {
    type: 'MenuSelection'
    args: Record<QueryMenuSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuSelectionWhereInput | null, orderBy?: prisma.MenuSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection[]> | prisma.MenuSelection[]
  }
  menuSelectionsConnection: {
    type: 'MenuSelectionConnection'
    args: Record<QueryMenuSelectionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuSelectionWhereInput | null, orderBy?: prisma.MenuSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelectionConnection> | prisma.MenuSelectionConnection
  }
  menuHeader: {
    type: 'MenuHeader'
    args: Record<QueryMenuHeaderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MenuHeaderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader | null> | prisma.MenuHeader | null
  }
  menuHeaders: {
    type: 'MenuHeader'
    args: Record<QueryMenuHeadersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuHeaderWhereInput | null, orderBy?: prisma.MenuHeaderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader[]> | prisma.MenuHeader[]
  }
  menuHeadersConnection: {
    type: 'MenuHeaderConnection'
    args: Record<QueryMenuHeadersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuHeaderWhereInput | null, orderBy?: prisma.MenuHeaderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeaderConnection> | prisma.MenuHeaderConnection
  }
  table: {
    type: 'Table'
    args: Record<QueryTableArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: TableWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table | null> | prisma.Table | null
  }
  tables: {
    type: 'Table'
    args: Record<QueryTablesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TableWhereInput | null, orderBy?: prisma.TableOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table[]> | prisma.Table[]
  }
  tablesConnection: {
    type: 'TableConnection'
    args: Record<QueryTablesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TableWhereInput | null, orderBy?: prisma.TableOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TableConnection> | prisma.TableConnection
  }
  cart: {
    type: 'Cart'
    args: Record<QueryCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CartWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart | null> | prisma.Cart | null
  }
  carts: {
    type: 'Cart'
    args: Record<QueryCartsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CartWhereInput | null, orderBy?: prisma.CartOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart[]> | prisma.Cart[]
  }
  cartsConnection: {
    type: 'CartConnection'
    args: Record<QueryCartsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CartWhereInput | null, orderBy?: prisma.CartOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CartConnection> | prisma.CartConnection
  }
  order: {
    type: 'Order'
    args: Record<QueryOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  orders: {
    type: 'Order'
    args: Record<QueryOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order[]> | prisma.Order[]
  }
  ordersConnection: {
    type: 'OrderConnection'
    args: Record<QueryOrdersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderConnection> | prisma.OrderConnection
  }
  orderItem: {
    type: 'OrderItem'
    args: Record<QueryOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  orderItems: {
    type: 'OrderItem'
    args: Record<QueryOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem[]> | prisma.OrderItem[]
  }
  orderItemsConnection: {
    type: 'OrderItemConnection'
    args: Record<QueryOrderItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemConnection> | prisma.OrderItemConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'permissions', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'organizations', args?: UserOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'resetToken', args?: [] | false, alias?: string  } 
  | { name: 'resetTokenExpiry', args?: [] | false, alias?: string  } 
  | { name: 'table', args?: [] | false, alias?: string  } 
  | { name: 'cart', args?: [] | false, alias?: string  } 
  | { name: 'orders', args?: UserOrdersArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'email'
  | 'name'
  | 'permissions'
  | 'password'
  | 'organizations'
  | 'resetToken'
  | 'resetTokenExpiry'
  | 'table'
  | 'cart'
  | 'orders'


type UserOrganizationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserOrdersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  permissions: {
    type: 'Permission'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Permission | null> | prisma.Permission | null
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organizations: {
    type: 'Organization'
    args: Record<UserOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: OrganizationWhereInput | null, orderBy?: prisma.OrganizationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization[]> | prisma.Organization[]
  }
  resetToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  resetTokenExpiry: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  table: {
    type: 'Table'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table | null> | prisma.Table | null
  }
  cart: {
    type: 'Cart'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart | null> | prisma.Cart | null
  }
  orders: {
    type: 'Order'
    args: Record<UserOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order[]> | prisma.Order[]
  }
}
  

// Types for Organization

type OrganizationObject =
  | OrganizationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'users', args?: OrganizationUsersArgs[] | false, alias?: string  } 
  | { name: 'menus', args?: OrganizationMenusArgs[] | false, alias?: string  } 
  | { name: 'owner', args?: [] | false, alias?: string  } 

type OrganizationFields =
  | 'id'
  | 'name'
  | 'users'
  | 'menus'
  | 'owner'


type OrganizationUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type OrganizationMenusArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrganizationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  users: {
    type: 'User'
    args: Record<OrganizationUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Organization">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  menus: {
    type: 'Menu'
    args: Record<OrganizationMenusArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Organization">,
      args: { where?: MenuWhereInput | null, orderBy?: prisma.MenuOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu[]> | prisma.Menu[]
  }
  owner: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Organization">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
}
  

// Types for Menu

type MenuObject =
  | MenuFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'menuItems', args?: MenuMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'organization', args?: [] | false, alias?: string  } 

type MenuFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'published'
  | 'title'
  | 'menuItems'
  | 'organization'


type MenuMenuItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface MenuFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  menuItems: {
    type: 'MenuItem'
    args: Record<MenuMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Menu">,
      args: { where?: MenuItemWhereInput | null, orderBy?: prisma.MenuItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem[]> | prisma.MenuItem[]
  }
  organization: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Menu">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
}
  

// Types for MenuItem

type MenuItemObject =
  | MenuItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'basePrice', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'menu', args?: [] | false, alias?: string  } 
  | { name: 'options', args?: MenuItemOptionsArgs[] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'largeImage', args?: [] | false, alias?: string  } 
  | { name: 'menuHeader', args?: [] | false, alias?: string  } 

type MenuItemFields =
  | 'id'
  | 'basePrice'
  | 'description'
  | 'menu'
  | 'options'
  | 'name'
  | 'image'
  | 'largeImage'
  | 'menuHeader'


type MenuItemOptionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface MenuItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  basePrice: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  menu: {
    type: 'Menu'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  options: {
    type: 'MenuChoice'
    args: Record<MenuItemOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItem">,
      args: { where?: MenuChoiceWhereInput | null, orderBy?: prisma.MenuChoiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice[]> | prisma.MenuChoice[]
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  largeImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  menuHeader: {
    type: 'MenuHeader'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader | null> | prisma.MenuHeader | null
  }
}
  

// Types for MenuChoice

type MenuChoiceObject =
  | MenuChoiceFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'header', args?: [] | false, alias?: string  } 
  | { name: 'subHeader', args?: [] | false, alias?: string  } 
  | { name: 'selections', args?: MenuChoiceSelectionsArgs[] | false, alias?: string  } 

type MenuChoiceFields =
  | 'id'
  | 'header'
  | 'subHeader'
  | 'selections'


type MenuChoiceSelectionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface MenuChoiceFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  header: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  subHeader: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  selections: {
    type: 'MenuSelection'
    args: Record<MenuChoiceSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuChoice">,
      args: { where?: MenuSelectionWhereInput | null, orderBy?: prisma.MenuSelectionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection[]> | prisma.MenuSelection[]
  }
}
  

// Types for MenuSelection

type MenuSelectionObject =
  | MenuSelectionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'selected', args?: [] | false, alias?: string  } 
  | { name: 'valueAdd', args?: [] | false, alias?: string  } 
  | { name: 'menuChoice', args?: [] | false, alias?: string  } 

type MenuSelectionFields =
  | 'id'
  | 'name'
  | 'selected'
  | 'valueAdd'
  | 'menuChoice'



  

export interface MenuSelectionFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  selected: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  valueAdd: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  menuChoice: {
    type: 'MenuChoice'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuSelection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice | null> | prisma.MenuChoice | null
  }
}
  

// Types for MenuHeader

type MenuHeaderObject =
  | MenuHeaderFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'subHeader', args?: [] | false, alias?: string  } 
  | { name: 'menuItems', args?: MenuHeaderMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'menu', args?: [] | false, alias?: string  } 

type MenuHeaderFields =
  | 'id'
  | 'name'
  | 'subHeader'
  | 'menuItems'
  | 'menu'


type MenuHeaderMenuItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface MenuHeaderFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  subHeader: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  menuItems: {
    type: 'MenuItem'
    args: Record<MenuHeaderMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuHeader">,
      args: { where?: MenuItemWhereInput | null, orderBy?: prisma.MenuItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem[]> | prisma.MenuItem[]
  }
  menu: {
    type: 'Menu'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuHeader">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
}
  

// Types for Table

type TableObject =
  | TableFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'customers', args?: TableCustomersArgs[] | false, alias?: string  } 
  | { name: 'carts', args?: TableCartsArgs[] | false, alias?: string  } 

type TableFields =
  | 'id'
  | 'customers'
  | 'carts'


type TableCustomersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type TableCartsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface TableFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customers: {
    type: 'User'
    args: Record<TableCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Table">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  carts: {
    type: 'Cart'
    args: Record<TableCartsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Table">,
      args: { where?: CartWhereInput | null, orderBy?: prisma.CartOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart[]> | prisma.Cart[]
  }
}
  

// Types for Cart

type CartObject =
  | CartFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'orders', args?: CartOrdersArgs[] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 
  | { name: 'table', args?: [] | false, alias?: string  } 
  | { name: 'total', args?: [] | false, alias?: string  } 

type CartFields =
  | 'id'
  | 'orders'
  | 'customer'
  | 'table'
  | 'total'


type CartOrdersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface CartFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  orders: {
    type: 'Order'
    args: Record<CartOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Cart">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order[]> | prisma.Order[]
  }
  customer: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Cart">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  table: {
    type: 'Table'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Cart">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table | null> | prisma.Table | null
  }
  total: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Order

type OrderObject =
  | OrderFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'items', args?: OrderItemsArgs[] | false, alias?: string  } 
  | { name: 'total', args?: [] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 
  | { name: 'charge', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrderFields =
  | 'id'
  | 'items'
  | 'total'
  | 'customer'
  | 'charge'
  | 'createdAt'
  | 'updatedAt'


type OrderItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrderFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  items: {
    type: 'OrderItem'
    args: Record<OrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Order">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem[]> | prisma.OrderItem[]
  }
  total: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customer: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Order">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  charge: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItem

type OrderItemObject =
  | OrderItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'quantity', args?: [] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 

type OrderItemFields =
  | 'id'
  | 'title'
  | 'price'
  | 'quantity'
  | 'customer'



  

export interface OrderItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  quantity: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customer: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrganizationConnection

type OrganizationConnectionObject =
  | OrganizationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrganizationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrganizationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrganizationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationEdge[]> | prisma.OrganizationEdge[]
  }
  aggregate: {
    type: 'AggregateOrganization'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrganization> | prisma.AggregateOrganization
  }
}
  

// Types for OrganizationEdge

type OrganizationEdgeObject =
  | OrganizationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrganizationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrganizationEdgeFieldDetails {
  node: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrganization

type AggregateOrganizationObject =
  | AggregateOrganizationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrganizationFields =
  | 'count'



  

export interface AggregateOrganizationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuConnection

type MenuConnectionObject =
  | MenuConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MenuConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MenuConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MenuEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuEdge[]> | prisma.MenuEdge[]
  }
  aggregate: {
    type: 'AggregateMenu'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMenu> | prisma.AggregateMenu
  }
}
  

// Types for MenuEdge

type MenuEdgeObject =
  | MenuEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MenuEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MenuEdgeFieldDetails {
  node: {
    type: 'Menu'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu> | prisma.Menu
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMenu

type AggregateMenuObject =
  | AggregateMenuFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMenuFields =
  | 'count'



  

export interface AggregateMenuFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuItemConnection

type MenuItemConnectionObject =
  | MenuItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MenuItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MenuItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MenuItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItemEdge[]> | prisma.MenuItemEdge[]
  }
  aggregate: {
    type: 'AggregateMenuItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMenuItem> | prisma.AggregateMenuItem
  }
}
  

// Types for MenuItemEdge

type MenuItemEdgeObject =
  | MenuItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MenuItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MenuItemEdgeFieldDetails {
  node: {
    type: 'MenuItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem> | prisma.MenuItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMenuItem

type AggregateMenuItemObject =
  | AggregateMenuItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMenuItemFields =
  | 'count'



  

export interface AggregateMenuItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuChoiceConnection

type MenuChoiceConnectionObject =
  | MenuChoiceConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MenuChoiceConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MenuChoiceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuChoiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MenuChoiceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuChoiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoiceEdge[]> | prisma.MenuChoiceEdge[]
  }
  aggregate: {
    type: 'AggregateMenuChoice'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuChoiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMenuChoice> | prisma.AggregateMenuChoice
  }
}
  

// Types for MenuChoiceEdge

type MenuChoiceEdgeObject =
  | MenuChoiceEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MenuChoiceEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MenuChoiceEdgeFieldDetails {
  node: {
    type: 'MenuChoice'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuChoiceEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice> | prisma.MenuChoice
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMenuChoice

type AggregateMenuChoiceObject =
  | AggregateMenuChoiceFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMenuChoiceFields =
  | 'count'



  

export interface AggregateMenuChoiceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuSelectionConnection

type MenuSelectionConnectionObject =
  | MenuSelectionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MenuSelectionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MenuSelectionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MenuSelectionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelectionEdge[]> | prisma.MenuSelectionEdge[]
  }
  aggregate: {
    type: 'AggregateMenuSelection'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuSelectionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMenuSelection> | prisma.AggregateMenuSelection
  }
}
  

// Types for MenuSelectionEdge

type MenuSelectionEdgeObject =
  | MenuSelectionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MenuSelectionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MenuSelectionEdgeFieldDetails {
  node: {
    type: 'MenuSelection'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuSelectionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection> | prisma.MenuSelection
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMenuSelection

type AggregateMenuSelectionObject =
  | AggregateMenuSelectionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMenuSelectionFields =
  | 'count'



  

export interface AggregateMenuSelectionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuHeaderConnection

type MenuHeaderConnectionObject =
  | MenuHeaderConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MenuHeaderConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MenuHeaderConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuHeaderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MenuHeaderEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuHeaderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeaderEdge[]> | prisma.MenuHeaderEdge[]
  }
  aggregate: {
    type: 'AggregateMenuHeader'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuHeaderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMenuHeader> | prisma.AggregateMenuHeader
  }
}
  

// Types for MenuHeaderEdge

type MenuHeaderEdgeObject =
  | MenuHeaderEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MenuHeaderEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MenuHeaderEdgeFieldDetails {
  node: {
    type: 'MenuHeader'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuHeaderEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader> | prisma.MenuHeader
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMenuHeader

type AggregateMenuHeaderObject =
  | AggregateMenuHeaderFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMenuHeaderFields =
  | 'count'



  

export interface AggregateMenuHeaderFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TableConnection

type TableConnectionObject =
  | TableConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type TableConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface TableConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TableConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'TableEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TableConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TableEdge[]> | prisma.TableEdge[]
  }
  aggregate: {
    type: 'AggregateTable'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TableConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateTable> | prisma.AggregateTable
  }
}
  

// Types for TableEdge

type TableEdgeObject =
  | TableEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type TableEdgeFields =
  | 'node'
  | 'cursor'



  

export interface TableEdgeFieldDetails {
  node: {
    type: 'Table'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TableEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table> | prisma.Table
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateTable

type AggregateTableObject =
  | AggregateTableFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateTableFields =
  | 'count'



  

export interface AggregateTableFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CartConnection

type CartConnectionObject =
  | CartConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CartConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CartConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CartConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CartEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CartConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CartEdge[]> | prisma.CartEdge[]
  }
  aggregate: {
    type: 'AggregateCart'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CartConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCart> | prisma.AggregateCart
  }
}
  

// Types for CartEdge

type CartEdgeObject =
  | CartEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CartEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CartEdgeFieldDetails {
  node: {
    type: 'Cart'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CartEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart> | prisma.Cart
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCart

type AggregateCartObject =
  | AggregateCartFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCartFields =
  | 'count'



  

export interface AggregateCartFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderConnection

type OrderConnectionObject =
  | OrderConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderEdge[]> | prisma.OrderEdge[]
  }
  aggregate: {
    type: 'AggregateOrder'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrder> | prisma.AggregateOrder
  }
}
  

// Types for OrderEdge

type OrderEdgeObject =
  | OrderEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderEdgeFieldDetails {
  node: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrder

type AggregateOrderObject =
  | AggregateOrderFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderFields =
  | 'count'



  

export interface AggregateOrderFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemConnection

type OrderItemConnectionObject =
  | OrderItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemEdge[]> | prisma.OrderItemEdge[]
  }
  aggregate: {
    type: 'AggregateOrderItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrderItem> | prisma.AggregateOrderItem
  }
}
  

// Types for OrderItemEdge

type OrderItemEdgeObject =
  | OrderItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderItemEdgeFieldDetails {
  node: {
    type: 'OrderItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrderItem

type AggregateOrderItemObject =
  | AggregateOrderItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderItemFields =
  | 'count'



  

export interface AggregateOrderItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createOrganization', args?: MutationCreateOrganizationArgs[] | false, alias?: string  } 
  | { name: 'updateOrganization', args?: MutationUpdateOrganizationArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrganizations', args?: MutationUpdateManyOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrganization', args?: MutationUpsertOrganizationArgs[] | false, alias?: string  } 
  | { name: 'deleteOrganization', args?: MutationDeleteOrganizationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrganizations', args?: MutationDeleteManyOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'createMenu', args?: MutationCreateMenuArgs[] | false, alias?: string  } 
  | { name: 'updateMenu', args?: MutationUpdateMenuArgs[] | false, alias?: string  } 
  | { name: 'updateManyMenus', args?: MutationUpdateManyMenusArgs[] | false, alias?: string  } 
  | { name: 'upsertMenu', args?: MutationUpsertMenuArgs[] | false, alias?: string  } 
  | { name: 'deleteMenu', args?: MutationDeleteMenuArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMenus', args?: MutationDeleteManyMenusArgs[] | false, alias?: string  } 
  | { name: 'createMenuItem', args?: MutationCreateMenuItemArgs[] | false, alias?: string  } 
  | { name: 'updateMenuItem', args?: MutationUpdateMenuItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyMenuItems', args?: MutationUpdateManyMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertMenuItem', args?: MutationUpsertMenuItemArgs[] | false, alias?: string  } 
  | { name: 'deleteMenuItem', args?: MutationDeleteMenuItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMenuItems', args?: MutationDeleteManyMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'createMenuChoice', args?: MutationCreateMenuChoiceArgs[] | false, alias?: string  } 
  | { name: 'updateMenuChoice', args?: MutationUpdateMenuChoiceArgs[] | false, alias?: string  } 
  | { name: 'updateManyMenuChoices', args?: MutationUpdateManyMenuChoicesArgs[] | false, alias?: string  } 
  | { name: 'upsertMenuChoice', args?: MutationUpsertMenuChoiceArgs[] | false, alias?: string  } 
  | { name: 'deleteMenuChoice', args?: MutationDeleteMenuChoiceArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMenuChoices', args?: MutationDeleteManyMenuChoicesArgs[] | false, alias?: string  } 
  | { name: 'createMenuSelection', args?: MutationCreateMenuSelectionArgs[] | false, alias?: string  } 
  | { name: 'updateMenuSelection', args?: MutationUpdateMenuSelectionArgs[] | false, alias?: string  } 
  | { name: 'updateManyMenuSelections', args?: MutationUpdateManyMenuSelectionsArgs[] | false, alias?: string  } 
  | { name: 'upsertMenuSelection', args?: MutationUpsertMenuSelectionArgs[] | false, alias?: string  } 
  | { name: 'deleteMenuSelection', args?: MutationDeleteMenuSelectionArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMenuSelections', args?: MutationDeleteManyMenuSelectionsArgs[] | false, alias?: string  } 
  | { name: 'createMenuHeader', args?: MutationCreateMenuHeaderArgs[] | false, alias?: string  } 
  | { name: 'updateMenuHeader', args?: MutationUpdateMenuHeaderArgs[] | false, alias?: string  } 
  | { name: 'updateManyMenuHeaders', args?: MutationUpdateManyMenuHeadersArgs[] | false, alias?: string  } 
  | { name: 'upsertMenuHeader', args?: MutationUpsertMenuHeaderArgs[] | false, alias?: string  } 
  | { name: 'deleteMenuHeader', args?: MutationDeleteMenuHeaderArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMenuHeaders', args?: MutationDeleteManyMenuHeadersArgs[] | false, alias?: string  } 
  | { name: 'createTable', args?: MutationCreateTableArgs[] | false, alias?: string  } 
  | { name: 'updateTable', args?: MutationUpdateTableArgs[] | false, alias?: string  } 
  | { name: 'upsertTable', args?: MutationUpsertTableArgs[] | false, alias?: string  } 
  | { name: 'deleteTable', args?: MutationDeleteTableArgs[] | false, alias?: string  } 
  | { name: 'deleteManyTables', args?: MutationDeleteManyTablesArgs[] | false, alias?: string  } 
  | { name: 'createCart', args?: MutationCreateCartArgs[] | false, alias?: string  } 
  | { name: 'updateCart', args?: MutationUpdateCartArgs[] | false, alias?: string  } 
  | { name: 'updateManyCarts', args?: MutationUpdateManyCartsArgs[] | false, alias?: string  } 
  | { name: 'upsertCart', args?: MutationUpsertCartArgs[] | false, alias?: string  } 
  | { name: 'deleteCart', args?: MutationDeleteCartArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCarts', args?: MutationDeleteManyCartsArgs[] | false, alias?: string  } 
  | { name: 'createOrder', args?: MutationCreateOrderArgs[] | false, alias?: string  } 
  | { name: 'updateOrder', args?: MutationUpdateOrderArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrders', args?: MutationUpdateManyOrdersArgs[] | false, alias?: string  } 
  | { name: 'upsertOrder', args?: MutationUpsertOrderArgs[] | false, alias?: string  } 
  | { name: 'deleteOrder', args?: MutationDeleteOrderArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrders', args?: MutationDeleteManyOrdersArgs[] | false, alias?: string  } 
  | { name: 'createOrderItem', args?: MutationCreateOrderItemArgs[] | false, alias?: string  } 
  | { name: 'updateOrderItem', args?: MutationUpdateOrderItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrderItems', args?: MutationUpdateManyOrderItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrderItem', args?: MutationUpsertOrderItemArgs[] | false, alias?: string  } 
  | { name: 'deleteOrderItem', args?: MutationDeleteOrderItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrderItems', args?: MutationDeleteManyOrderItemsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createOrganization'
  | 'updateOrganization'
  | 'updateManyOrganizations'
  | 'upsertOrganization'
  | 'deleteOrganization'
  | 'deleteManyOrganizations'
  | 'createMenu'
  | 'updateMenu'
  | 'updateManyMenus'
  | 'upsertMenu'
  | 'deleteMenu'
  | 'deleteManyMenus'
  | 'createMenuItem'
  | 'updateMenuItem'
  | 'updateManyMenuItems'
  | 'upsertMenuItem'
  | 'deleteMenuItem'
  | 'deleteManyMenuItems'
  | 'createMenuChoice'
  | 'updateMenuChoice'
  | 'updateManyMenuChoices'
  | 'upsertMenuChoice'
  | 'deleteMenuChoice'
  | 'deleteManyMenuChoices'
  | 'createMenuSelection'
  | 'updateMenuSelection'
  | 'updateManyMenuSelections'
  | 'upsertMenuSelection'
  | 'deleteMenuSelection'
  | 'deleteManyMenuSelections'
  | 'createMenuHeader'
  | 'updateMenuHeader'
  | 'updateManyMenuHeaders'
  | 'upsertMenuHeader'
  | 'deleteMenuHeader'
  | 'deleteManyMenuHeaders'
  | 'createTable'
  | 'updateTable'
  | 'upsertTable'
  | 'deleteTable'
  | 'deleteManyTables'
  | 'createCart'
  | 'updateCart'
  | 'updateManyCarts'
  | 'upsertCart'
  | 'deleteCart'
  | 'deleteManyCarts'
  | 'createOrder'
  | 'updateOrder'
  | 'updateManyOrders'
  | 'upsertOrder'
  | 'deleteOrder'
  | 'deleteManyOrders'
  | 'createOrderItem'
  | 'updateOrderItem'
  | 'updateManyOrderItems'
  | 'upsertOrderItem'
  | 'deleteOrderItem'
  | 'deleteManyOrderItems'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateOrganizationArgs =
  | 'data'
type MutationUpdateOrganizationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrganizationsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrganizationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrganizationArgs =
  | 'where'
type MutationDeleteManyOrganizationsArgs =
  | 'where'
type MutationCreateMenuArgs =
  | 'data'
type MutationUpdateMenuArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMenusArgs =
  | 'data'
  | 'where'
type MutationUpsertMenuArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMenuArgs =
  | 'where'
type MutationDeleteManyMenusArgs =
  | 'where'
type MutationCreateMenuItemArgs =
  | 'data'
type MutationUpdateMenuItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMenuItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertMenuItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMenuItemArgs =
  | 'where'
type MutationDeleteManyMenuItemsArgs =
  | 'where'
type MutationCreateMenuChoiceArgs =
  | 'data'
type MutationUpdateMenuChoiceArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMenuChoicesArgs =
  | 'data'
  | 'where'
type MutationUpsertMenuChoiceArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMenuChoiceArgs =
  | 'where'
type MutationDeleteManyMenuChoicesArgs =
  | 'where'
type MutationCreateMenuSelectionArgs =
  | 'data'
type MutationUpdateMenuSelectionArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMenuSelectionsArgs =
  | 'data'
  | 'where'
type MutationUpsertMenuSelectionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMenuSelectionArgs =
  | 'where'
type MutationDeleteManyMenuSelectionsArgs =
  | 'where'
type MutationCreateMenuHeaderArgs =
  | 'data'
type MutationUpdateMenuHeaderArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMenuHeadersArgs =
  | 'data'
  | 'where'
type MutationUpsertMenuHeaderArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMenuHeaderArgs =
  | 'where'
type MutationDeleteManyMenuHeadersArgs =
  | 'where'
type MutationCreateTableArgs =
  | 'data'
type MutationUpdateTableArgs =
  | 'data'
  | 'where'
type MutationUpsertTableArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteTableArgs =
  | 'where'
type MutationDeleteManyTablesArgs =
  | 'where'
type MutationCreateCartArgs =
  | 'data'
type MutationUpdateCartArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCartsArgs =
  | 'data'
  | 'where'
type MutationUpsertCartArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCartArgs =
  | 'where'
type MutationDeleteManyCartsArgs =
  | 'where'
type MutationCreateOrderArgs =
  | 'data'
type MutationUpdateOrderArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrdersArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderArgs =
  | 'where'
type MutationDeleteManyOrdersArgs =
  | 'where'
type MutationCreateOrderItemArgs =
  | 'data'
type MutationUpdateOrderItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrderItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderItemArgs =
  | 'where'
type MutationDeleteManyOrderItemsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrganization: {
    type: 'Organization'
    args: Record<MutationCreateOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  updateOrganization: {
    type: 'Organization'
    args: Record<MutationUpdateOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationUpdateInput, where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  updateManyOrganizations: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationUpdateManyMutationInput, where?: OrganizationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrganization: {
    type: 'Organization'
    args: Record<MutationUpsertOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationWhereUniqueInput, create: OrganizationCreateInput, update: OrganizationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  deleteOrganization: {
    type: 'Organization'
    args: Record<MutationDeleteOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  deleteManyOrganizations: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrganizationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMenu: {
    type: 'Menu'
    args: Record<MutationCreateMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu> | prisma.Menu
  }
  updateMenu: {
    type: 'Menu'
    args: Record<MutationUpdateMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuUpdateInput, where: MenuWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  updateManyMenus: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMenusArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuUpdateManyMutationInput, where?: MenuWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMenu: {
    type: 'Menu'
    args: Record<MutationUpsertMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuWhereUniqueInput, create: MenuCreateInput, update: MenuUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu> | prisma.Menu
  }
  deleteMenu: {
    type: 'Menu'
    args: Record<MutationDeleteMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  deleteManyMenus: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMenusArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MenuWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMenuItem: {
    type: 'MenuItem'
    args: Record<MutationCreateMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem> | prisma.MenuItem
  }
  updateMenuItem: {
    type: 'MenuItem'
    args: Record<MutationUpdateMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuItemUpdateInput, where: MenuItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem | null> | prisma.MenuItem | null
  }
  updateManyMenuItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuItemUpdateManyMutationInput, where?: MenuItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMenuItem: {
    type: 'MenuItem'
    args: Record<MutationUpsertMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuItemWhereUniqueInput, create: MenuItemCreateInput, update: MenuItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem> | prisma.MenuItem
  }
  deleteMenuItem: {
    type: 'MenuItem'
    args: Record<MutationDeleteMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem | null> | prisma.MenuItem | null
  }
  deleteManyMenuItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MenuItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMenuChoice: {
    type: 'MenuChoice'
    args: Record<MutationCreateMenuChoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuChoiceCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice> | prisma.MenuChoice
  }
  updateMenuChoice: {
    type: 'MenuChoice'
    args: Record<MutationUpdateMenuChoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuChoiceUpdateInput, where: MenuChoiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice | null> | prisma.MenuChoice | null
  }
  updateManyMenuChoices: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMenuChoicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuChoiceUpdateManyMutationInput, where?: MenuChoiceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMenuChoice: {
    type: 'MenuChoice'
    args: Record<MutationUpsertMenuChoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuChoiceWhereUniqueInput, create: MenuChoiceCreateInput, update: MenuChoiceUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice> | prisma.MenuChoice
  }
  deleteMenuChoice: {
    type: 'MenuChoice'
    args: Record<MutationDeleteMenuChoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuChoiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice | null> | prisma.MenuChoice | null
  }
  deleteManyMenuChoices: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMenuChoicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MenuChoiceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMenuSelection: {
    type: 'MenuSelection'
    args: Record<MutationCreateMenuSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuSelectionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection> | prisma.MenuSelection
  }
  updateMenuSelection: {
    type: 'MenuSelection'
    args: Record<MutationUpdateMenuSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuSelectionUpdateInput, where: MenuSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection | null> | prisma.MenuSelection | null
  }
  updateManyMenuSelections: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMenuSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuSelectionUpdateManyMutationInput, where?: MenuSelectionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMenuSelection: {
    type: 'MenuSelection'
    args: Record<MutationUpsertMenuSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuSelectionWhereUniqueInput, create: MenuSelectionCreateInput, update: MenuSelectionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection> | prisma.MenuSelection
  }
  deleteMenuSelection: {
    type: 'MenuSelection'
    args: Record<MutationDeleteMenuSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuSelectionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection | null> | prisma.MenuSelection | null
  }
  deleteManyMenuSelections: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMenuSelectionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MenuSelectionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMenuHeader: {
    type: 'MenuHeader'
    args: Record<MutationCreateMenuHeaderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuHeaderCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader> | prisma.MenuHeader
  }
  updateMenuHeader: {
    type: 'MenuHeader'
    args: Record<MutationUpdateMenuHeaderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuHeaderUpdateInput, where: MenuHeaderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader | null> | prisma.MenuHeader | null
  }
  updateManyMenuHeaders: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMenuHeadersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuHeaderUpdateManyMutationInput, where?: MenuHeaderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMenuHeader: {
    type: 'MenuHeader'
    args: Record<MutationUpsertMenuHeaderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuHeaderWhereUniqueInput, create: MenuHeaderCreateInput, update: MenuHeaderUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader> | prisma.MenuHeader
  }
  deleteMenuHeader: {
    type: 'MenuHeader'
    args: Record<MutationDeleteMenuHeaderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuHeaderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader | null> | prisma.MenuHeader | null
  }
  deleteManyMenuHeaders: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMenuHeadersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MenuHeaderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createTable: {
    type: 'Table'
    args: Record<MutationCreateTableArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TableCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table> | prisma.Table
  }
  updateTable: {
    type: 'Table'
    args: Record<MutationUpdateTableArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TableUpdateInput, where: TableWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table | null> | prisma.Table | null
  }
  upsertTable: {
    type: 'Table'
    args: Record<MutationUpsertTableArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TableWhereUniqueInput, create: TableCreateInput, update: TableUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table> | prisma.Table
  }
  deleteTable: {
    type: 'Table'
    args: Record<MutationDeleteTableArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TableWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table | null> | prisma.Table | null
  }
  deleteManyTables: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyTablesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: TableWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCart: {
    type: 'Cart'
    args: Record<MutationCreateCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CartCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart> | prisma.Cart
  }
  updateCart: {
    type: 'Cart'
    args: Record<MutationUpdateCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CartUpdateInput, where: CartWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart | null> | prisma.Cart | null
  }
  updateManyCarts: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCartsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CartUpdateManyMutationInput, where?: CartWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCart: {
    type: 'Cart'
    args: Record<MutationUpsertCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CartWhereUniqueInput, create: CartCreateInput, update: CartUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart> | prisma.Cart
  }
  deleteCart: {
    type: 'Cart'
    args: Record<MutationDeleteCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CartWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart | null> | prisma.Cart | null
  }
  deleteManyCarts: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCartsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CartWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrder: {
    type: 'Order'
    args: Record<MutationCreateOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  updateOrder: {
    type: 'Order'
    args: Record<MutationUpdateOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderUpdateInput, where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  updateManyOrders: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderUpdateManyMutationInput, where?: OrderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrder: {
    type: 'Order'
    args: Record<MutationUpsertOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderWhereUniqueInput, create: OrderCreateInput, update: OrderUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  deleteOrder: {
    type: 'Order'
    args: Record<MutationDeleteOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  deleteManyOrders: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrderItem: {
    type: 'OrderItem'
    args: Record<MutationCreateOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  updateOrderItem: {
    type: 'OrderItem'
    args: Record<MutationUpdateOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemUpdateInput, where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  updateManyOrderItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemUpdateManyMutationInput, where?: OrderItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrderItem: {
    type: 'OrderItem'
    args: Record<MutationUpsertOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemWhereUniqueInput, create: OrderItemCreateInput, update: OrderItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  deleteOrderItem: {
    type: 'OrderItem'
    args: Record<MutationDeleteOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  deleteManyOrderItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'organization', args?: SubscriptionOrganizationArgs[] | false, alias?: string  } 
  | { name: 'menu', args?: SubscriptionMenuArgs[] | false, alias?: string  } 
  | { name: 'menuItem', args?: SubscriptionMenuItemArgs[] | false, alias?: string  } 
  | { name: 'menuChoice', args?: SubscriptionMenuChoiceArgs[] | false, alias?: string  } 
  | { name: 'menuSelection', args?: SubscriptionMenuSelectionArgs[] | false, alias?: string  } 
  | { name: 'menuHeader', args?: SubscriptionMenuHeaderArgs[] | false, alias?: string  } 
  | { name: 'table', args?: SubscriptionTableArgs[] | false, alias?: string  } 
  | { name: 'cart', args?: SubscriptionCartArgs[] | false, alias?: string  } 
  | { name: 'order', args?: SubscriptionOrderArgs[] | false, alias?: string  } 
  | { name: 'orderItem', args?: SubscriptionOrderItemArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'organization'
  | 'menu'
  | 'menuItem'
  | 'menuChoice'
  | 'menuSelection'
  | 'menuHeader'
  | 'table'
  | 'cart'
  | 'order'
  | 'orderItem'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionOrganizationArgs =
  | 'where'
type SubscriptionMenuArgs =
  | 'where'
type SubscriptionMenuItemArgs =
  | 'where'
type SubscriptionMenuChoiceArgs =
  | 'where'
type SubscriptionMenuSelectionArgs =
  | 'where'
type SubscriptionMenuHeaderArgs =
  | 'where'
type SubscriptionTableArgs =
  | 'where'
type SubscriptionCartArgs =
  | 'where'
type SubscriptionOrderArgs =
  | 'where'
type SubscriptionOrderItemArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  organization: {
    type: 'OrganizationSubscriptionPayload'
    args: Record<SubscriptionOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrganizationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationSubscriptionPayload | null> | prisma.OrganizationSubscriptionPayload | null
  }
  menu: {
    type: 'MenuSubscriptionPayload'
    args: Record<SubscriptionMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MenuSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSubscriptionPayload | null> | prisma.MenuSubscriptionPayload | null
  }
  menuItem: {
    type: 'MenuItemSubscriptionPayload'
    args: Record<SubscriptionMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MenuItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItemSubscriptionPayload | null> | prisma.MenuItemSubscriptionPayload | null
  }
  menuChoice: {
    type: 'MenuChoiceSubscriptionPayload'
    args: Record<SubscriptionMenuChoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MenuChoiceSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoiceSubscriptionPayload | null> | prisma.MenuChoiceSubscriptionPayload | null
  }
  menuSelection: {
    type: 'MenuSelectionSubscriptionPayload'
    args: Record<SubscriptionMenuSelectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MenuSelectionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelectionSubscriptionPayload | null> | prisma.MenuSelectionSubscriptionPayload | null
  }
  menuHeader: {
    type: 'MenuHeaderSubscriptionPayload'
    args: Record<SubscriptionMenuHeaderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MenuHeaderSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeaderSubscriptionPayload | null> | prisma.MenuHeaderSubscriptionPayload | null
  }
  table: {
    type: 'TableSubscriptionPayload'
    args: Record<SubscriptionTableArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: TableSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TableSubscriptionPayload | null> | prisma.TableSubscriptionPayload | null
  }
  cart: {
    type: 'CartSubscriptionPayload'
    args: Record<SubscriptionCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CartSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CartSubscriptionPayload | null> | prisma.CartSubscriptionPayload | null
  }
  order: {
    type: 'OrderSubscriptionPayload'
    args: Record<SubscriptionOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderSubscriptionPayload | null> | prisma.OrderSubscriptionPayload | null
  }
  orderItem: {
    type: 'OrderItemSubscriptionPayload'
    args: Record<SubscriptionOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemSubscriptionPayload | null> | prisma.OrderItemSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'permissions', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'resetToken', args?: [] | false, alias?: string  } 
  | { name: 'resetTokenExpiry', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'email'
  | 'name'
  | 'permissions'
  | 'password'
  | 'resetToken'
  | 'resetTokenExpiry'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  permissions: {
    type: 'Permission'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Permission | null> | prisma.Permission | null
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  resetToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  resetTokenExpiry: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for OrganizationSubscriptionPayload

type OrganizationSubscriptionPayloadObject =
  | OrganizationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrganizationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrganizationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrganizationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationPreviousValues | null> | prisma.OrganizationPreviousValues | null
  }
}
  

// Types for OrganizationPreviousValues

type OrganizationPreviousValuesObject =
  | OrganizationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 

type OrganizationPreviousValuesFields =
  | 'id'
  | 'name'



  

export interface OrganizationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuSubscriptionPayload

type MenuSubscriptionPayloadObject =
  | MenuSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MenuSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MenuSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Menu'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MenuPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuPreviousValues | null> | prisma.MenuPreviousValues | null
  }
}
  

// Types for MenuPreviousValues

type MenuPreviousValuesObject =
  | MenuPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 

type MenuPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'published'
  | 'title'



  

export interface MenuPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuItemSubscriptionPayload

type MenuItemSubscriptionPayloadObject =
  | MenuItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MenuItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MenuItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'MenuItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem | null> | prisma.MenuItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MenuItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItemPreviousValues | null> | prisma.MenuItemPreviousValues | null
  }
}
  

// Types for MenuItemPreviousValues

type MenuItemPreviousValuesObject =
  | MenuItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'basePrice', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'largeImage', args?: [] | false, alias?: string  } 

type MenuItemPreviousValuesFields =
  | 'id'
  | 'basePrice'
  | 'description'
  | 'name'
  | 'image'
  | 'largeImage'



  

export interface MenuItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  basePrice: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  largeImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for MenuChoiceSubscriptionPayload

type MenuChoiceSubscriptionPayloadObject =
  | MenuChoiceSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MenuChoiceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MenuChoiceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuChoiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'MenuChoice'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuChoiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoice | null> | prisma.MenuChoice | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MenuChoicePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuChoiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuChoicePreviousValues | null> | prisma.MenuChoicePreviousValues | null
  }
}
  

// Types for MenuChoicePreviousValues

type MenuChoicePreviousValuesObject =
  | MenuChoicePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'header', args?: [] | false, alias?: string  } 
  | { name: 'subHeader', args?: [] | false, alias?: string  } 

type MenuChoicePreviousValuesFields =
  | 'id'
  | 'header'
  | 'subHeader'



  

export interface MenuChoicePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  header: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  subHeader: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for MenuSelectionSubscriptionPayload

type MenuSelectionSubscriptionPayloadObject =
  | MenuSelectionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MenuSelectionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MenuSelectionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'MenuSelection'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelection | null> | prisma.MenuSelection | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MenuSelectionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuSelectionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSelectionPreviousValues | null> | prisma.MenuSelectionPreviousValues | null
  }
}
  

// Types for MenuSelectionPreviousValues

type MenuSelectionPreviousValuesObject =
  | MenuSelectionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'selected', args?: [] | false, alias?: string  } 
  | { name: 'valueAdd', args?: [] | false, alias?: string  } 

type MenuSelectionPreviousValuesFields =
  | 'id'
  | 'name'
  | 'selected'
  | 'valueAdd'



  

export interface MenuSelectionPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  selected: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  valueAdd: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for MenuHeaderSubscriptionPayload

type MenuHeaderSubscriptionPayloadObject =
  | MenuHeaderSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MenuHeaderSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MenuHeaderSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuHeaderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'MenuHeader'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuHeaderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeader | null> | prisma.MenuHeader | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MenuHeaderPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuHeaderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuHeaderPreviousValues | null> | prisma.MenuHeaderPreviousValues | null
  }
}
  

// Types for MenuHeaderPreviousValues

type MenuHeaderPreviousValuesObject =
  | MenuHeaderPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'subHeader', args?: [] | false, alias?: string  } 

type MenuHeaderPreviousValuesFields =
  | 'id'
  | 'name'
  | 'subHeader'



  

export interface MenuHeaderPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  subHeader: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for TableSubscriptionPayload

type TableSubscriptionPayloadObject =
  | TableSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type TableSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface TableSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TableSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Table'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TableSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Table | null> | prisma.Table | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'TablePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TableSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TablePreviousValues | null> | prisma.TablePreviousValues | null
  }
}
  

// Types for TablePreviousValues

type TablePreviousValuesObject =
  | TablePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 

type TablePreviousValuesFields =
  | 'id'



  

export interface TablePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CartSubscriptionPayload

type CartSubscriptionPayloadObject =
  | CartSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CartSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CartSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CartSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Cart'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CartSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Cart | null> | prisma.Cart | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CartPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CartSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CartPreviousValues | null> | prisma.CartPreviousValues | null
  }
}
  

// Types for CartPreviousValues

type CartPreviousValuesObject =
  | CartPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'total', args?: [] | false, alias?: string  } 

type CartPreviousValuesFields =
  | 'id'
  | 'total'



  

export interface CartPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  total: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderSubscriptionPayload

type OrderSubscriptionPayloadObject =
  | OrderSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderPreviousValues | null> | prisma.OrderPreviousValues | null
  }
}
  

// Types for OrderPreviousValues

type OrderPreviousValuesObject =
  | OrderPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'total', args?: [] | false, alias?: string  } 
  | { name: 'charge', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrderPreviousValuesFields =
  | 'id'
  | 'total'
  | 'charge'
  | 'createdAt'
  | 'updatedAt'



  

export interface OrderPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  total: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  charge: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemSubscriptionPayload

type OrderItemSubscriptionPayloadObject =
  | OrderItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OrderItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemPreviousValues | null> | prisma.OrderItemPreviousValues | null
  }
}
  

// Types for OrderItemPreviousValues

type OrderItemPreviousValuesObject =
  | OrderItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'quantity', args?: [] | false, alias?: string  } 

type OrderItemPreviousValuesFields =
  | 'id'
  | 'title'
  | 'price'
  | 'quantity'



  

export interface OrderItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  quantity: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface OrganizationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  users_every?: UserWhereInput | null
  users_some?: UserWhereInput | null
  users_none?: UserWhereInput | null
  menus_every?: MenuWhereInput | null
  menus_some?: MenuWhereInput | null
  menus_none?: MenuWhereInput | null
  owner?: UserWhereInput | null
  AND?: OrganizationWhereInput[]
  OR?: OrganizationWhereInput[]
  NOT?: OrganizationWhereInput[]
}
export type OrganizationWhereInputInputObject =
  | Extract<keyof OrganizationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'users_every', alias?: string  } 
  | { name: 'users_some', alias?: string  } 
  | { name: 'users_none', alias?: string  } 
  | { name: 'menus_every', alias?: string  } 
  | { name: 'menus_some', alias?: string  } 
  | { name: 'menus_none', alias?: string  } 
  | { name: 'owner', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  permissions?: prisma.Permission | null
  permissions_not?: prisma.Permission | null
  permissions_in?: prisma.Permission[]
  permissions_not_in?: prisma.Permission[]
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  organizations_every?: OrganizationWhereInput | null
  organizations_some?: OrganizationWhereInput | null
  organizations_none?: OrganizationWhereInput | null
  resetToken?: string | null
  resetToken_not?: string | null
  resetToken_in?: string[]
  resetToken_not_in?: string[]
  resetToken_lt?: string | null
  resetToken_lte?: string | null
  resetToken_gt?: string | null
  resetToken_gte?: string | null
  resetToken_contains?: string | null
  resetToken_not_contains?: string | null
  resetToken_starts_with?: string | null
  resetToken_not_starts_with?: string | null
  resetToken_ends_with?: string | null
  resetToken_not_ends_with?: string | null
  resetTokenExpiry?: number | null
  resetTokenExpiry_not?: number | null
  resetTokenExpiry_in?: number[]
  resetTokenExpiry_not_in?: number[]
  resetTokenExpiry_lt?: number | null
  resetTokenExpiry_lte?: number | null
  resetTokenExpiry_gt?: number | null
  resetTokenExpiry_gte?: number | null
  table?: TableWhereInput | null
  cart?: CartWhereInput | null
  orders_every?: OrderWhereInput | null
  orders_some?: OrderWhereInput | null
  orders_none?: OrderWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'permissions_not', alias?: string  } 
  | { name: 'permissions_in', alias?: string  } 
  | { name: 'permissions_not_in', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'organizations_every', alias?: string  } 
  | { name: 'organizations_some', alias?: string  } 
  | { name: 'organizations_none', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetToken_not', alias?: string  } 
  | { name: 'resetToken_in', alias?: string  } 
  | { name: 'resetToken_not_in', alias?: string  } 
  | { name: 'resetToken_lt', alias?: string  } 
  | { name: 'resetToken_lte', alias?: string  } 
  | { name: 'resetToken_gt', alias?: string  } 
  | { name: 'resetToken_gte', alias?: string  } 
  | { name: 'resetToken_contains', alias?: string  } 
  | { name: 'resetToken_not_contains', alias?: string  } 
  | { name: 'resetToken_starts_with', alias?: string  } 
  | { name: 'resetToken_not_starts_with', alias?: string  } 
  | { name: 'resetToken_ends_with', alias?: string  } 
  | { name: 'resetToken_not_ends_with', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'resetTokenExpiry_not', alias?: string  } 
  | { name: 'resetTokenExpiry_in', alias?: string  } 
  | { name: 'resetTokenExpiry_not_in', alias?: string  } 
  | { name: 'resetTokenExpiry_lt', alias?: string  } 
  | { name: 'resetTokenExpiry_lte', alias?: string  } 
  | { name: 'resetTokenExpiry_gt', alias?: string  } 
  | { name: 'resetTokenExpiry_gte', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'cart', alias?: string  } 
  | { name: 'orders_every', alias?: string  } 
  | { name: 'orders_some', alias?: string  } 
  | { name: 'orders_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TableWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  customers_every?: UserWhereInput | null
  customers_some?: UserWhereInput | null
  customers_none?: UserWhereInput | null
  carts_every?: CartWhereInput | null
  carts_some?: CartWhereInput | null
  carts_none?: CartWhereInput | null
  AND?: TableWhereInput[]
  OR?: TableWhereInput[]
  NOT?: TableWhereInput[]
}
export type TableWhereInputInputObject =
  | Extract<keyof TableWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'customers_every', alias?: string  } 
  | { name: 'customers_some', alias?: string  } 
  | { name: 'customers_none', alias?: string  } 
  | { name: 'carts_every', alias?: string  } 
  | { name: 'carts_some', alias?: string  } 
  | { name: 'carts_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CartWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  orders_every?: OrderWhereInput | null
  orders_some?: OrderWhereInput | null
  orders_none?: OrderWhereInput | null
  customer?: UserWhereInput | null
  table?: TableWhereInput | null
  total?: number | null
  total_not?: number | null
  total_in?: number[]
  total_not_in?: number[]
  total_lt?: number | null
  total_lte?: number | null
  total_gt?: number | null
  total_gte?: number | null
  AND?: CartWhereInput[]
  OR?: CartWhereInput[]
  NOT?: CartWhereInput[]
}
export type CartWhereInputInputObject =
  | Extract<keyof CartWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'orders_every', alias?: string  } 
  | { name: 'orders_some', alias?: string  } 
  | { name: 'orders_none', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'total_not', alias?: string  } 
  | { name: 'total_in', alias?: string  } 
  | { name: 'total_not_in', alias?: string  } 
  | { name: 'total_lt', alias?: string  } 
  | { name: 'total_lte', alias?: string  } 
  | { name: 'total_gt', alias?: string  } 
  | { name: 'total_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  items_every?: OrderItemWhereInput | null
  items_some?: OrderItemWhereInput | null
  items_none?: OrderItemWhereInput | null
  total?: number | null
  total_not?: number | null
  total_in?: number[]
  total_not_in?: number[]
  total_lt?: number | null
  total_lte?: number | null
  total_gt?: number | null
  total_gte?: number | null
  customer?: UserWhereInput | null
  charge?: string | null
  charge_not?: string | null
  charge_in?: string[]
  charge_not_in?: string[]
  charge_lt?: string | null
  charge_lte?: string | null
  charge_gt?: string | null
  charge_gte?: string | null
  charge_contains?: string | null
  charge_not_contains?: string | null
  charge_starts_with?: string | null
  charge_not_starts_with?: string | null
  charge_ends_with?: string | null
  charge_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrderWhereInput[]
  OR?: OrderWhereInput[]
  NOT?: OrderWhereInput[]
}
export type OrderWhereInputInputObject =
  | Extract<keyof OrderWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'items_every', alias?: string  } 
  | { name: 'items_some', alias?: string  } 
  | { name: 'items_none', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'total_not', alias?: string  } 
  | { name: 'total_in', alias?: string  } 
  | { name: 'total_not_in', alias?: string  } 
  | { name: 'total_lt', alias?: string  } 
  | { name: 'total_lte', alias?: string  } 
  | { name: 'total_gt', alias?: string  } 
  | { name: 'total_gte', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  | { name: 'charge_not', alias?: string  } 
  | { name: 'charge_in', alias?: string  } 
  | { name: 'charge_not_in', alias?: string  } 
  | { name: 'charge_lt', alias?: string  } 
  | { name: 'charge_lte', alias?: string  } 
  | { name: 'charge_gt', alias?: string  } 
  | { name: 'charge_gte', alias?: string  } 
  | { name: 'charge_contains', alias?: string  } 
  | { name: 'charge_not_contains', alias?: string  } 
  | { name: 'charge_starts_with', alias?: string  } 
  | { name: 'charge_not_starts_with', alias?: string  } 
  | { name: 'charge_ends_with', alias?: string  } 
  | { name: 'charge_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  quantity?: number | null
  quantity_not?: number | null
  quantity_in?: number[]
  quantity_not_in?: number[]
  quantity_lt?: number | null
  quantity_lte?: number | null
  quantity_gt?: number | null
  quantity_gte?: number | null
  customer?: UserWhereInput | null
  AND?: OrderItemWhereInput[]
  OR?: OrderItemWhereInput[]
  NOT?: OrderItemWhereInput[]
}
export type OrderItemWhereInputInputObject =
  | Extract<keyof OrderItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'quantity_not', alias?: string  } 
  | { name: 'quantity_in', alias?: string  } 
  | { name: 'quantity_not_in', alias?: string  } 
  | { name: 'quantity_lt', alias?: string  } 
  | { name: 'quantity_lte', alias?: string  } 
  | { name: 'quantity_gt', alias?: string  } 
  | { name: 'quantity_gte', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  published?: boolean | null
  published_not?: boolean | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  menuItems_every?: MenuItemWhereInput | null
  menuItems_some?: MenuItemWhereInput | null
  menuItems_none?: MenuItemWhereInput | null
  organization?: OrganizationWhereInput | null
  AND?: MenuWhereInput[]
  OR?: MenuWhereInput[]
  NOT?: MenuWhereInput[]
}
export type MenuWhereInputInputObject =
  | Extract<keyof MenuWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'menuItems_every', alias?: string  } 
  | { name: 'menuItems_some', alias?: string  } 
  | { name: 'menuItems_none', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  basePrice?: string | null
  basePrice_not?: string | null
  basePrice_in?: string[]
  basePrice_not_in?: string[]
  basePrice_lt?: string | null
  basePrice_lte?: string | null
  basePrice_gt?: string | null
  basePrice_gte?: string | null
  basePrice_contains?: string | null
  basePrice_not_contains?: string | null
  basePrice_starts_with?: string | null
  basePrice_not_starts_with?: string | null
  basePrice_ends_with?: string | null
  basePrice_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  menu?: MenuWhereInput | null
  options_every?: MenuChoiceWhereInput | null
  options_some?: MenuChoiceWhereInput | null
  options_none?: MenuChoiceWhereInput | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  largeImage?: string | null
  largeImage_not?: string | null
  largeImage_in?: string[]
  largeImage_not_in?: string[]
  largeImage_lt?: string | null
  largeImage_lte?: string | null
  largeImage_gt?: string | null
  largeImage_gte?: string | null
  largeImage_contains?: string | null
  largeImage_not_contains?: string | null
  largeImage_starts_with?: string | null
  largeImage_not_starts_with?: string | null
  largeImage_ends_with?: string | null
  largeImage_not_ends_with?: string | null
  menuHeader?: MenuHeaderWhereInput | null
  AND?: MenuItemWhereInput[]
  OR?: MenuItemWhereInput[]
  NOT?: MenuItemWhereInput[]
}
export type MenuItemWhereInputInputObject =
  | Extract<keyof MenuItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'basePrice', alias?: string  } 
  | { name: 'basePrice_not', alias?: string  } 
  | { name: 'basePrice_in', alias?: string  } 
  | { name: 'basePrice_not_in', alias?: string  } 
  | { name: 'basePrice_lt', alias?: string  } 
  | { name: 'basePrice_lte', alias?: string  } 
  | { name: 'basePrice_gt', alias?: string  } 
  | { name: 'basePrice_gte', alias?: string  } 
  | { name: 'basePrice_contains', alias?: string  } 
  | { name: 'basePrice_not_contains', alias?: string  } 
  | { name: 'basePrice_starts_with', alias?: string  } 
  | { name: 'basePrice_not_starts_with', alias?: string  } 
  | { name: 'basePrice_ends_with', alias?: string  } 
  | { name: 'basePrice_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'options_every', alias?: string  } 
  | { name: 'options_some', alias?: string  } 
  | { name: 'options_none', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  | { name: 'largeImage_not', alias?: string  } 
  | { name: 'largeImage_in', alias?: string  } 
  | { name: 'largeImage_not_in', alias?: string  } 
  | { name: 'largeImage_lt', alias?: string  } 
  | { name: 'largeImage_lte', alias?: string  } 
  | { name: 'largeImage_gt', alias?: string  } 
  | { name: 'largeImage_gte', alias?: string  } 
  | { name: 'largeImage_contains', alias?: string  } 
  | { name: 'largeImage_not_contains', alias?: string  } 
  | { name: 'largeImage_starts_with', alias?: string  } 
  | { name: 'largeImage_not_starts_with', alias?: string  } 
  | { name: 'largeImage_ends_with', alias?: string  } 
  | { name: 'largeImage_not_ends_with', alias?: string  } 
  | { name: 'menuHeader', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuChoiceWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  header?: string | null
  header_not?: string | null
  header_in?: string[]
  header_not_in?: string[]
  header_lt?: string | null
  header_lte?: string | null
  header_gt?: string | null
  header_gte?: string | null
  header_contains?: string | null
  header_not_contains?: string | null
  header_starts_with?: string | null
  header_not_starts_with?: string | null
  header_ends_with?: string | null
  header_not_ends_with?: string | null
  subHeader?: string | null
  subHeader_not?: string | null
  subHeader_in?: string[]
  subHeader_not_in?: string[]
  subHeader_lt?: string | null
  subHeader_lte?: string | null
  subHeader_gt?: string | null
  subHeader_gte?: string | null
  subHeader_contains?: string | null
  subHeader_not_contains?: string | null
  subHeader_starts_with?: string | null
  subHeader_not_starts_with?: string | null
  subHeader_ends_with?: string | null
  subHeader_not_ends_with?: string | null
  selections_every?: MenuSelectionWhereInput | null
  selections_some?: MenuSelectionWhereInput | null
  selections_none?: MenuSelectionWhereInput | null
  AND?: MenuChoiceWhereInput[]
  OR?: MenuChoiceWhereInput[]
  NOT?: MenuChoiceWhereInput[]
}
export type MenuChoiceWhereInputInputObject =
  | Extract<keyof MenuChoiceWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'header', alias?: string  } 
  | { name: 'header_not', alias?: string  } 
  | { name: 'header_in', alias?: string  } 
  | { name: 'header_not_in', alias?: string  } 
  | { name: 'header_lt', alias?: string  } 
  | { name: 'header_lte', alias?: string  } 
  | { name: 'header_gt', alias?: string  } 
  | { name: 'header_gte', alias?: string  } 
  | { name: 'header_contains', alias?: string  } 
  | { name: 'header_not_contains', alias?: string  } 
  | { name: 'header_starts_with', alias?: string  } 
  | { name: 'header_not_starts_with', alias?: string  } 
  | { name: 'header_ends_with', alias?: string  } 
  | { name: 'header_not_ends_with', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'subHeader_not', alias?: string  } 
  | { name: 'subHeader_in', alias?: string  } 
  | { name: 'subHeader_not_in', alias?: string  } 
  | { name: 'subHeader_lt', alias?: string  } 
  | { name: 'subHeader_lte', alias?: string  } 
  | { name: 'subHeader_gt', alias?: string  } 
  | { name: 'subHeader_gte', alias?: string  } 
  | { name: 'subHeader_contains', alias?: string  } 
  | { name: 'subHeader_not_contains', alias?: string  } 
  | { name: 'subHeader_starts_with', alias?: string  } 
  | { name: 'subHeader_not_starts_with', alias?: string  } 
  | { name: 'subHeader_ends_with', alias?: string  } 
  | { name: 'subHeader_not_ends_with', alias?: string  } 
  | { name: 'selections_every', alias?: string  } 
  | { name: 'selections_some', alias?: string  } 
  | { name: 'selections_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuSelectionWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  selected?: boolean | null
  selected_not?: boolean | null
  valueAdd?: string | null
  valueAdd_not?: string | null
  valueAdd_in?: string[]
  valueAdd_not_in?: string[]
  valueAdd_lt?: string | null
  valueAdd_lte?: string | null
  valueAdd_gt?: string | null
  valueAdd_gte?: string | null
  valueAdd_contains?: string | null
  valueAdd_not_contains?: string | null
  valueAdd_starts_with?: string | null
  valueAdd_not_starts_with?: string | null
  valueAdd_ends_with?: string | null
  valueAdd_not_ends_with?: string | null
  menuChoice?: MenuChoiceWhereInput | null
  AND?: MenuSelectionWhereInput[]
  OR?: MenuSelectionWhereInput[]
  NOT?: MenuSelectionWhereInput[]
}
export type MenuSelectionWhereInputInputObject =
  | Extract<keyof MenuSelectionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'selected', alias?: string  } 
  | { name: 'selected_not', alias?: string  } 
  | { name: 'valueAdd', alias?: string  } 
  | { name: 'valueAdd_not', alias?: string  } 
  | { name: 'valueAdd_in', alias?: string  } 
  | { name: 'valueAdd_not_in', alias?: string  } 
  | { name: 'valueAdd_lt', alias?: string  } 
  | { name: 'valueAdd_lte', alias?: string  } 
  | { name: 'valueAdd_gt', alias?: string  } 
  | { name: 'valueAdd_gte', alias?: string  } 
  | { name: 'valueAdd_contains', alias?: string  } 
  | { name: 'valueAdd_not_contains', alias?: string  } 
  | { name: 'valueAdd_starts_with', alias?: string  } 
  | { name: 'valueAdd_not_starts_with', alias?: string  } 
  | { name: 'valueAdd_ends_with', alias?: string  } 
  | { name: 'valueAdd_not_ends_with', alias?: string  } 
  | { name: 'menuChoice', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuHeaderWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  subHeader?: string | null
  subHeader_not?: string | null
  subHeader_in?: string[]
  subHeader_not_in?: string[]
  subHeader_lt?: string | null
  subHeader_lte?: string | null
  subHeader_gt?: string | null
  subHeader_gte?: string | null
  subHeader_contains?: string | null
  subHeader_not_contains?: string | null
  subHeader_starts_with?: string | null
  subHeader_not_starts_with?: string | null
  subHeader_ends_with?: string | null
  subHeader_not_ends_with?: string | null
  menuItems_every?: MenuItemWhereInput | null
  menuItems_some?: MenuItemWhereInput | null
  menuItems_none?: MenuItemWhereInput | null
  menu?: MenuWhereInput | null
  AND?: MenuHeaderWhereInput[]
  OR?: MenuHeaderWhereInput[]
  NOT?: MenuHeaderWhereInput[]
}
export type MenuHeaderWhereInputInputObject =
  | Extract<keyof MenuHeaderWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'subHeader_not', alias?: string  } 
  | { name: 'subHeader_in', alias?: string  } 
  | { name: 'subHeader_not_in', alias?: string  } 
  | { name: 'subHeader_lt', alias?: string  } 
  | { name: 'subHeader_lte', alias?: string  } 
  | { name: 'subHeader_gt', alias?: string  } 
  | { name: 'subHeader_gte', alias?: string  } 
  | { name: 'subHeader_contains', alias?: string  } 
  | { name: 'subHeader_not_contains', alias?: string  } 
  | { name: 'subHeader_starts_with', alias?: string  } 
  | { name: 'subHeader_not_starts_with', alias?: string  } 
  | { name: 'subHeader_ends_with', alias?: string  } 
  | { name: 'subHeader_not_ends_with', alias?: string  } 
  | { name: 'menuItems_every', alias?: string  } 
  | { name: 'menuItems_some', alias?: string  } 
  | { name: 'menuItems_none', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationWhereUniqueInput {
  id?: string | null
}
export type OrganizationWhereUniqueInputInputObject =
  | Extract<keyof OrganizationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MenuWhereUniqueInput {
  id?: string | null
}
export type MenuWhereUniqueInputInputObject =
  | Extract<keyof MenuWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MenuItemWhereUniqueInput {
  id?: string | null
}
export type MenuItemWhereUniqueInputInputObject =
  | Extract<keyof MenuItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MenuChoiceWhereUniqueInput {
  id?: string | null
}
export type MenuChoiceWhereUniqueInputInputObject =
  | Extract<keyof MenuChoiceWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MenuSelectionWhereUniqueInput {
  id?: string | null
}
export type MenuSelectionWhereUniqueInputInputObject =
  | Extract<keyof MenuSelectionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MenuHeaderWhereUniqueInput {
  id?: string | null
}
export type MenuHeaderWhereUniqueInputInputObject =
  | Extract<keyof MenuHeaderWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface TableWhereUniqueInput {
  id?: string | null
}
export type TableWhereUniqueInputInputObject =
  | Extract<keyof TableWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface CartWhereUniqueInput {
  id?: string | null
}
export type CartWhereUniqueInputInputObject =
  | Extract<keyof CartWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrderWhereUniqueInput {
  id?: string | null
}
export type OrderWhereUniqueInputInputObject =
  | Extract<keyof OrderWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrderItemWhereUniqueInput {
  id?: string | null
}
export type OrderItemWhereUniqueInputInputObject =
  | Extract<keyof OrderItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  email?: string
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string
  organizations?: OrganizationCreateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  table?: TableCreateOneWithoutCustomersInput | null
  cart?: CartCreateOneWithoutCustomerInput | null
  orders?: OrderCreateManyWithoutCustomerInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'cart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface OrganizationCreateManyInput {
  create?: OrganizationCreateInput[]
  connect?: OrganizationWhereUniqueInput[]
}
export type OrganizationCreateManyInputInputObject =
  | Extract<keyof OrganizationCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationCreateInput {
  id?: string | null
  name?: string
  users?: UserCreateManyInput | null
  menus?: MenuCreateManyWithoutOrganizationInput | null
  owner?: UserCreateOneInput
}
export type OrganizationCreateInputInputObject =
  | Extract<keyof OrganizationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'users', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'owner', alias?: string  } 
  
export interface UserCreateManyInput {
  create?: UserCreateInput[]
  connect?: UserWhereUniqueInput[]
}
export type UserCreateManyInputInputObject =
  | Extract<keyof UserCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCreateManyWithoutOrganizationInput {
  create?: MenuCreateWithoutOrganizationInput[]
  connect?: MenuWhereUniqueInput[]
}
export type MenuCreateManyWithoutOrganizationInputInputObject =
  | Extract<keyof MenuCreateManyWithoutOrganizationInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCreateWithoutOrganizationInput {
  id?: string | null
  published?: boolean | null
  title?: string
  menuItems?: MenuItemCreateManyWithoutMenuInput | null
}
export type MenuCreateWithoutOrganizationInputInputObject =
  | Extract<keyof MenuCreateWithoutOrganizationInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  
export interface MenuItemCreateManyWithoutMenuInput {
  create?: MenuItemCreateWithoutMenuInput[]
  connect?: MenuItemWhereUniqueInput[]
}
export type MenuItemCreateManyWithoutMenuInputInputObject =
  | Extract<keyof MenuItemCreateManyWithoutMenuInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuItemCreateWithoutMenuInput {
  id?: string | null
  basePrice?: string
  description?: string | null
  options?: MenuChoiceCreateManyInput | null
  name?: string
  image?: string | null
  largeImage?: string | null
  menuHeader?: MenuHeaderCreateOneWithoutMenuItemsInput | null
}
export type MenuItemCreateWithoutMenuInputInputObject =
  | Extract<keyof MenuItemCreateWithoutMenuInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'basePrice', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'options', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  | { name: 'menuHeader', alias?: string  } 
  
export interface MenuChoiceCreateManyInput {
  create?: MenuChoiceCreateInput[]
  connect?: MenuChoiceWhereUniqueInput[]
}
export type MenuChoiceCreateManyInputInputObject =
  | Extract<keyof MenuChoiceCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuChoiceCreateInput {
  id?: string | null
  header?: string
  subHeader?: string | null
  selections?: MenuSelectionCreateManyWithoutMenuChoiceInput | null
}
export type MenuChoiceCreateInputInputObject =
  | Extract<keyof MenuChoiceCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'header', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'selections', alias?: string  } 
  
export interface MenuSelectionCreateManyWithoutMenuChoiceInput {
  create?: MenuSelectionCreateWithoutMenuChoiceInput[]
  connect?: MenuSelectionWhereUniqueInput[]
}
export type MenuSelectionCreateManyWithoutMenuChoiceInputInputObject =
  | Extract<keyof MenuSelectionCreateManyWithoutMenuChoiceInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuSelectionCreateWithoutMenuChoiceInput {
  id?: string | null
  name?: string
  selected?: boolean | null
  valueAdd?: string | null
}
export type MenuSelectionCreateWithoutMenuChoiceInputInputObject =
  | Extract<keyof MenuSelectionCreateWithoutMenuChoiceInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'selected', alias?: string  } 
  | { name: 'valueAdd', alias?: string  } 
  
export interface MenuHeaderCreateOneWithoutMenuItemsInput {
  create?: MenuHeaderCreateWithoutMenuItemsInput | null
  connect?: MenuHeaderWhereUniqueInput | null
}
export type MenuHeaderCreateOneWithoutMenuItemsInputInputObject =
  | Extract<keyof MenuHeaderCreateOneWithoutMenuItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuHeaderCreateWithoutMenuItemsInput {
  id?: string | null
  name?: string
  subHeader?: string | null
  menu?: MenuCreateOneInput | null
}
export type MenuHeaderCreateWithoutMenuItemsInputInputObject =
  | Extract<keyof MenuHeaderCreateWithoutMenuItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  
export interface MenuCreateOneInput {
  create?: MenuCreateInput | null
  connect?: MenuWhereUniqueInput | null
}
export type MenuCreateOneInputInputObject =
  | Extract<keyof MenuCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCreateInput {
  id?: string | null
  published?: boolean | null
  title?: string
  menuItems?: MenuItemCreateManyWithoutMenuInput | null
  organization?: OrganizationCreateOneWithoutMenusInput
}
export type MenuCreateInputInputObject =
  | Extract<keyof MenuCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  
export interface OrganizationCreateOneWithoutMenusInput {
  create?: OrganizationCreateWithoutMenusInput | null
  connect?: OrganizationWhereUniqueInput | null
}
export type OrganizationCreateOneWithoutMenusInputInputObject =
  | Extract<keyof OrganizationCreateOneWithoutMenusInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationCreateWithoutMenusInput {
  id?: string | null
  name?: string
  users?: UserCreateManyInput | null
  owner?: UserCreateOneInput
}
export type OrganizationCreateWithoutMenusInputInputObject =
  | Extract<keyof OrganizationCreateWithoutMenusInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'users', alias?: string  } 
  | { name: 'owner', alias?: string  } 
  
export interface UserCreateOneInput {
  create?: UserCreateInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneInputInputObject =
  | Extract<keyof UserCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TableCreateOneWithoutCustomersInput {
  create?: TableCreateWithoutCustomersInput | null
  connect?: TableWhereUniqueInput | null
}
export type TableCreateOneWithoutCustomersInputInputObject =
  | Extract<keyof TableCreateOneWithoutCustomersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TableCreateWithoutCustomersInput {
  id?: string | null
  carts?: CartCreateManyWithoutTableInput | null
}
export type TableCreateWithoutCustomersInputInputObject =
  | Extract<keyof TableCreateWithoutCustomersInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'carts', alias?: string  } 
  
export interface CartCreateManyWithoutTableInput {
  create?: CartCreateWithoutTableInput[]
  connect?: CartWhereUniqueInput[]
}
export type CartCreateManyWithoutTableInputInputObject =
  | Extract<keyof CartCreateManyWithoutTableInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CartCreateWithoutTableInput {
  id?: string | null
  orders?: OrderCreateManyInput | null
  customer?: UserCreateOneWithoutCartInput
  total?: number
}
export type CartCreateWithoutTableInputInputObject =
  | Extract<keyof CartCreateWithoutTableInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'total', alias?: string  } 
  
export interface OrderCreateManyInput {
  create?: OrderCreateInput[]
  connect?: OrderWhereUniqueInput[]
}
export type OrderCreateManyInputInputObject =
  | Extract<keyof OrderCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateInput {
  id?: string | null
  items?: OrderItemCreateManyInput | null
  total?: number
  customer?: UserCreateOneWithoutOrdersInput
  charge?: string
}
export type OrderCreateInputInputObject =
  | Extract<keyof OrderCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  
export interface OrderItemCreateManyInput {
  create?: OrderItemCreateInput[]
  connect?: OrderItemWhereUniqueInput[]
}
export type OrderItemCreateManyInputInputObject =
  | Extract<keyof OrderItemCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemCreateInput {
  id?: string | null
  title?: string
  price?: number
  quantity?: number | null
  customer?: UserCreateOneInput
}
export type OrderItemCreateInputInputObject =
  | Extract<keyof OrderItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface UserCreateOneWithoutOrdersInput {
  create?: UserCreateWithoutOrdersInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutOrdersInputInputObject =
  | Extract<keyof UserCreateOneWithoutOrdersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutOrdersInput {
  id?: string | null
  email?: string
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string
  organizations?: OrganizationCreateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  table?: TableCreateOneWithoutCustomersInput | null
  cart?: CartCreateOneWithoutCustomerInput | null
}
export type UserCreateWithoutOrdersInputInputObject =
  | Extract<keyof UserCreateWithoutOrdersInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'cart', alias?: string  } 
  
export interface CartCreateOneWithoutCustomerInput {
  create?: CartCreateWithoutCustomerInput | null
  connect?: CartWhereUniqueInput | null
}
export type CartCreateOneWithoutCustomerInputInputObject =
  | Extract<keyof CartCreateOneWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CartCreateWithoutCustomerInput {
  id?: string | null
  orders?: OrderCreateManyInput | null
  table?: TableCreateOneWithoutCartsInput | null
  total?: number
}
export type CartCreateWithoutCustomerInputInputObject =
  | Extract<keyof CartCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'total', alias?: string  } 
  
export interface TableCreateOneWithoutCartsInput {
  create?: TableCreateWithoutCartsInput | null
  connect?: TableWhereUniqueInput | null
}
export type TableCreateOneWithoutCartsInputInputObject =
  | Extract<keyof TableCreateOneWithoutCartsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TableCreateWithoutCartsInput {
  id?: string | null
  customers?: UserCreateManyWithoutTableInput | null
}
export type TableCreateWithoutCartsInputInputObject =
  | Extract<keyof TableCreateWithoutCartsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'customers', alias?: string  } 
  
export interface UserCreateManyWithoutTableInput {
  create?: UserCreateWithoutTableInput[]
  connect?: UserWhereUniqueInput[]
}
export type UserCreateManyWithoutTableInputInputObject =
  | Extract<keyof UserCreateManyWithoutTableInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutTableInput {
  id?: string | null
  email?: string
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string
  organizations?: OrganizationCreateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  cart?: CartCreateOneWithoutCustomerInput | null
  orders?: OrderCreateManyWithoutCustomerInput | null
}
export type UserCreateWithoutTableInputInputObject =
  | Extract<keyof UserCreateWithoutTableInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'cart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface OrderCreateManyWithoutCustomerInput {
  create?: OrderCreateWithoutCustomerInput[]
  connect?: OrderWhereUniqueInput[]
}
export type OrderCreateManyWithoutCustomerInputInputObject =
  | Extract<keyof OrderCreateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateWithoutCustomerInput {
  id?: string | null
  items?: OrderItemCreateManyInput | null
  total?: number
  charge?: string
}
export type OrderCreateWithoutCustomerInputInputObject =
  | Extract<keyof OrderCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  
export interface UserCreateOneWithoutCartInput {
  create?: UserCreateWithoutCartInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutCartInputInputObject =
  | Extract<keyof UserCreateOneWithoutCartInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutCartInput {
  id?: string | null
  email?: string
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string
  organizations?: OrganizationCreateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  table?: TableCreateOneWithoutCustomersInput | null
  orders?: OrderCreateManyWithoutCustomerInput | null
}
export type UserCreateWithoutCartInputInputObject =
  | Extract<keyof UserCreateWithoutCartInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface UserUpdateInput {
  email?: string | null
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string | null
  organizations?: OrganizationUpdateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  table?: TableUpdateOneWithoutCustomersInput | null
  cart?: CartUpdateOneWithoutCustomerInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'cart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface OrganizationUpdateManyInput {
  create?: OrganizationCreateInput[]
  update?: OrganizationUpdateWithWhereUniqueNestedInput[]
  upsert?: OrganizationUpsertWithWhereUniqueNestedInput[]
  delete?: OrganizationWhereUniqueInput[]
  connect?: OrganizationWhereUniqueInput[]
  set?: OrganizationWhereUniqueInput[]
  disconnect?: OrganizationWhereUniqueInput[]
  deleteMany?: OrganizationScalarWhereInput[]
  updateMany?: OrganizationUpdateManyWithWhereNestedInput[]
}
export type OrganizationUpdateManyInputInputObject =
  | Extract<keyof OrganizationUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrganizationUpdateWithWhereUniqueNestedInput {
  where?: OrganizationWhereUniqueInput
  data?: OrganizationUpdateDataInput
}
export type OrganizationUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof OrganizationUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrganizationUpdateDataInput {
  name?: string | null
  users?: UserUpdateManyInput | null
  menus?: MenuUpdateManyWithoutOrganizationInput | null
  owner?: UserUpdateOneRequiredInput | null
}
export type OrganizationUpdateDataInputInputObject =
  | Extract<keyof OrganizationUpdateDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'users', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'owner', alias?: string  } 
  
export interface UserUpdateManyInput {
  create?: UserCreateInput[]
  update?: UserUpdateWithWhereUniqueNestedInput[]
  upsert?: UserUpsertWithWhereUniqueNestedInput[]
  delete?: UserWhereUniqueInput[]
  connect?: UserWhereUniqueInput[]
  set?: UserWhereUniqueInput[]
  disconnect?: UserWhereUniqueInput[]
  deleteMany?: UserScalarWhereInput[]
  updateMany?: UserUpdateManyWithWhereNestedInput[]
}
export type UserUpdateManyInputInputObject =
  | Extract<keyof UserUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserUpdateWithWhereUniqueNestedInput {
  where?: UserWhereUniqueInput
  data?: UserUpdateDataInput
}
export type UserUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof UserUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateDataInput {
  email?: string | null
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string | null
  organizations?: OrganizationUpdateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  table?: TableUpdateOneWithoutCustomersInput | null
  cart?: CartUpdateOneWithoutCustomerInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
}
export type UserUpdateDataInputInputObject =
  | Extract<keyof UserUpdateDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'cart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface TableUpdateOneWithoutCustomersInput {
  create?: TableCreateWithoutCustomersInput | null
  update?: TableUpdateWithoutCustomersDataInput | null
  upsert?: TableUpsertWithoutCustomersInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: TableWhereUniqueInput | null
}
export type TableUpdateOneWithoutCustomersInputInputObject =
  | Extract<keyof TableUpdateOneWithoutCustomersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TableUpdateWithoutCustomersDataInput {
  carts?: CartUpdateManyWithoutTableInput | null
}
export type TableUpdateWithoutCustomersDataInputInputObject =
  | Extract<keyof TableUpdateWithoutCustomersDataInput, string>
  | { name: 'carts', alias?: string  } 
  
export interface CartUpdateManyWithoutTableInput {
  create?: CartCreateWithoutTableInput[]
  delete?: CartWhereUniqueInput[]
  connect?: CartWhereUniqueInput[]
  set?: CartWhereUniqueInput[]
  disconnect?: CartWhereUniqueInput[]
  update?: CartUpdateWithWhereUniqueWithoutTableInput[]
  upsert?: CartUpsertWithWhereUniqueWithoutTableInput[]
  deleteMany?: CartScalarWhereInput[]
  updateMany?: CartUpdateManyWithWhereNestedInput[]
}
export type CartUpdateManyWithoutTableInputInputObject =
  | Extract<keyof CartUpdateManyWithoutTableInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface CartUpdateWithWhereUniqueWithoutTableInput {
  where?: CartWhereUniqueInput
  data?: CartUpdateWithoutTableDataInput
}
export type CartUpdateWithWhereUniqueWithoutTableInputInputObject =
  | Extract<keyof CartUpdateWithWhereUniqueWithoutTableInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CartUpdateWithoutTableDataInput {
  orders?: OrderUpdateManyInput | null
  customer?: UserUpdateOneRequiredWithoutCartInput | null
  total?: number | null
}
export type CartUpdateWithoutTableDataInputInputObject =
  | Extract<keyof CartUpdateWithoutTableDataInput, string>
  | { name: 'orders', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'total', alias?: string  } 
  
export interface OrderUpdateManyInput {
  create?: OrderCreateInput[]
  update?: OrderUpdateWithWhereUniqueNestedInput[]
  upsert?: OrderUpsertWithWhereUniqueNestedInput[]
  delete?: OrderWhereUniqueInput[]
  connect?: OrderWhereUniqueInput[]
  set?: OrderWhereUniqueInput[]
  disconnect?: OrderWhereUniqueInput[]
  deleteMany?: OrderScalarWhereInput[]
  updateMany?: OrderUpdateManyWithWhereNestedInput[]
}
export type OrderUpdateManyInputInputObject =
  | Extract<keyof OrderUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderUpdateWithWhereUniqueNestedInput {
  where?: OrderWhereUniqueInput
  data?: OrderUpdateDataInput
}
export type OrderUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof OrderUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderUpdateDataInput {
  items?: OrderItemUpdateManyInput | null
  total?: number | null
  customer?: UserUpdateOneRequiredWithoutOrdersInput | null
  charge?: string | null
}
export type OrderUpdateDataInputInputObject =
  | Extract<keyof OrderUpdateDataInput, string>
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  
export interface OrderItemUpdateManyInput {
  create?: OrderItemCreateInput[]
  update?: OrderItemUpdateWithWhereUniqueNestedInput[]
  upsert?: OrderItemUpsertWithWhereUniqueNestedInput[]
  delete?: OrderItemWhereUniqueInput[]
  connect?: OrderItemWhereUniqueInput[]
  set?: OrderItemWhereUniqueInput[]
  disconnect?: OrderItemWhereUniqueInput[]
  deleteMany?: OrderItemScalarWhereInput[]
  updateMany?: OrderItemUpdateManyWithWhereNestedInput[]
}
export type OrderItemUpdateManyInputInputObject =
  | Extract<keyof OrderItemUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderItemUpdateWithWhereUniqueNestedInput {
  where?: OrderItemWhereUniqueInput
  data?: OrderItemUpdateDataInput
}
export type OrderItemUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof OrderItemUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemUpdateDataInput {
  title?: string | null
  price?: number | null
  quantity?: number | null
  customer?: UserUpdateOneRequiredInput | null
}
export type OrderItemUpdateDataInputInputObject =
  | Extract<keyof OrderItemUpdateDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface UserUpdateOneRequiredInput {
  create?: UserCreateInput | null
  update?: UserUpdateDataInput | null
  upsert?: UserUpsertNestedInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredInputInputObject =
  | Extract<keyof UserUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpsertNestedInput {
  update?: UserUpdateDataInput
  create?: UserCreateInput
}
export type UserUpsertNestedInputInputObject =
  | Extract<keyof UserUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemUpsertWithWhereUniqueNestedInput {
  where?: OrderItemWhereUniqueInput
  update?: OrderItemUpdateDataInput
  create?: OrderItemCreateInput
}
export type OrderItemUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof OrderItemUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  quantity?: number | null
  quantity_not?: number | null
  quantity_in?: number[]
  quantity_not_in?: number[]
  quantity_lt?: number | null
  quantity_lte?: number | null
  quantity_gt?: number | null
  quantity_gte?: number | null
  AND?: OrderItemScalarWhereInput[]
  OR?: OrderItemScalarWhereInput[]
  NOT?: OrderItemScalarWhereInput[]
}
export type OrderItemScalarWhereInputInputObject =
  | Extract<keyof OrderItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'quantity_not', alias?: string  } 
  | { name: 'quantity_in', alias?: string  } 
  | { name: 'quantity_not_in', alias?: string  } 
  | { name: 'quantity_lt', alias?: string  } 
  | { name: 'quantity_lte', alias?: string  } 
  | { name: 'quantity_gt', alias?: string  } 
  | { name: 'quantity_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemUpdateManyWithWhereNestedInput {
  where?: OrderItemScalarWhereInput
  data?: OrderItemUpdateManyDataInput
}
export type OrderItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrderItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemUpdateManyDataInput {
  title?: string | null
  price?: number | null
  quantity?: number | null
}
export type OrderItemUpdateManyDataInputInputObject =
  | Extract<keyof OrderItemUpdateManyDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutOrdersInput {
  create?: UserCreateWithoutOrdersInput | null
  update?: UserUpdateWithoutOrdersDataInput | null
  upsert?: UserUpsertWithoutOrdersInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutOrdersInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutOrdersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutOrdersDataInput {
  email?: string | null
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string | null
  organizations?: OrganizationUpdateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  table?: TableUpdateOneWithoutCustomersInput | null
  cart?: CartUpdateOneWithoutCustomerInput | null
}
export type UserUpdateWithoutOrdersDataInputInputObject =
  | Extract<keyof UserUpdateWithoutOrdersDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'cart', alias?: string  } 
  
export interface CartUpdateOneWithoutCustomerInput {
  create?: CartCreateWithoutCustomerInput | null
  update?: CartUpdateWithoutCustomerDataInput | null
  upsert?: CartUpsertWithoutCustomerInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: CartWhereUniqueInput | null
}
export type CartUpdateOneWithoutCustomerInputInputObject =
  | Extract<keyof CartUpdateOneWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CartUpdateWithoutCustomerDataInput {
  orders?: OrderUpdateManyInput | null
  table?: TableUpdateOneWithoutCartsInput | null
  total?: number | null
}
export type CartUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof CartUpdateWithoutCustomerDataInput, string>
  | { name: 'orders', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'total', alias?: string  } 
  
export interface TableUpdateOneWithoutCartsInput {
  create?: TableCreateWithoutCartsInput | null
  update?: TableUpdateWithoutCartsDataInput | null
  upsert?: TableUpsertWithoutCartsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: TableWhereUniqueInput | null
}
export type TableUpdateOneWithoutCartsInputInputObject =
  | Extract<keyof TableUpdateOneWithoutCartsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TableUpdateWithoutCartsDataInput {
  customers?: UserUpdateManyWithoutTableInput | null
}
export type TableUpdateWithoutCartsDataInputInputObject =
  | Extract<keyof TableUpdateWithoutCartsDataInput, string>
  | { name: 'customers', alias?: string  } 
  
export interface UserUpdateManyWithoutTableInput {
  create?: UserCreateWithoutTableInput[]
  delete?: UserWhereUniqueInput[]
  connect?: UserWhereUniqueInput[]
  set?: UserWhereUniqueInput[]
  disconnect?: UserWhereUniqueInput[]
  update?: UserUpdateWithWhereUniqueWithoutTableInput[]
  upsert?: UserUpsertWithWhereUniqueWithoutTableInput[]
  deleteMany?: UserScalarWhereInput[]
  updateMany?: UserUpdateManyWithWhereNestedInput[]
}
export type UserUpdateManyWithoutTableInputInputObject =
  | Extract<keyof UserUpdateManyWithoutTableInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserUpdateWithWhereUniqueWithoutTableInput {
  where?: UserWhereUniqueInput
  data?: UserUpdateWithoutTableDataInput
}
export type UserUpdateWithWhereUniqueWithoutTableInputInputObject =
  | Extract<keyof UserUpdateWithWhereUniqueWithoutTableInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateWithoutTableDataInput {
  email?: string | null
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string | null
  organizations?: OrganizationUpdateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  cart?: CartUpdateOneWithoutCustomerInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
}
export type UserUpdateWithoutTableDataInputInputObject =
  | Extract<keyof UserUpdateWithoutTableDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'cart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface OrderUpdateManyWithoutCustomerInput {
  create?: OrderCreateWithoutCustomerInput[]
  delete?: OrderWhereUniqueInput[]
  connect?: OrderWhereUniqueInput[]
  set?: OrderWhereUniqueInput[]
  disconnect?: OrderWhereUniqueInput[]
  update?: OrderUpdateWithWhereUniqueWithoutCustomerInput[]
  upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput[]
  deleteMany?: OrderScalarWhereInput[]
  updateMany?: OrderUpdateManyWithWhereNestedInput[]
}
export type OrderUpdateManyWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpdateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderUpdateWithWhereUniqueWithoutCustomerInput {
  where?: OrderWhereUniqueInput
  data?: OrderUpdateWithoutCustomerDataInput
}
export type OrderUpdateWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpdateWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderUpdateWithoutCustomerDataInput {
  items?: OrderItemUpdateManyInput | null
  total?: number | null
  charge?: string | null
}
export type OrderUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof OrderUpdateWithoutCustomerDataInput, string>
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  
export interface OrderUpsertWithWhereUniqueWithoutCustomerInput {
  where?: OrderWhereUniqueInput
  update?: OrderUpdateWithoutCustomerDataInput
  create?: OrderCreateWithoutCustomerInput
}
export type OrderUpsertWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpsertWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  total?: number | null
  total_not?: number | null
  total_in?: number[]
  total_not_in?: number[]
  total_lt?: number | null
  total_lte?: number | null
  total_gt?: number | null
  total_gte?: number | null
  charge?: string | null
  charge_not?: string | null
  charge_in?: string[]
  charge_not_in?: string[]
  charge_lt?: string | null
  charge_lte?: string | null
  charge_gt?: string | null
  charge_gte?: string | null
  charge_contains?: string | null
  charge_not_contains?: string | null
  charge_starts_with?: string | null
  charge_not_starts_with?: string | null
  charge_ends_with?: string | null
  charge_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrderScalarWhereInput[]
  OR?: OrderScalarWhereInput[]
  NOT?: OrderScalarWhereInput[]
}
export type OrderScalarWhereInputInputObject =
  | Extract<keyof OrderScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'total_not', alias?: string  } 
  | { name: 'total_in', alias?: string  } 
  | { name: 'total_not_in', alias?: string  } 
  | { name: 'total_lt', alias?: string  } 
  | { name: 'total_lte', alias?: string  } 
  | { name: 'total_gt', alias?: string  } 
  | { name: 'total_gte', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  | { name: 'charge_not', alias?: string  } 
  | { name: 'charge_in', alias?: string  } 
  | { name: 'charge_not_in', alias?: string  } 
  | { name: 'charge_lt', alias?: string  } 
  | { name: 'charge_lte', alias?: string  } 
  | { name: 'charge_gt', alias?: string  } 
  | { name: 'charge_gte', alias?: string  } 
  | { name: 'charge_contains', alias?: string  } 
  | { name: 'charge_not_contains', alias?: string  } 
  | { name: 'charge_starts_with', alias?: string  } 
  | { name: 'charge_not_starts_with', alias?: string  } 
  | { name: 'charge_ends_with', alias?: string  } 
  | { name: 'charge_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderUpdateManyWithWhereNestedInput {
  where?: OrderScalarWhereInput
  data?: OrderUpdateManyDataInput
}
export type OrderUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrderUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderUpdateManyDataInput {
  total?: number | null
  charge?: string | null
}
export type OrderUpdateManyDataInputInputObject =
  | Extract<keyof OrderUpdateManyDataInput, string>
  | { name: 'total', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  
export interface UserUpsertWithWhereUniqueWithoutTableInput {
  where?: UserWhereUniqueInput
  update?: UserUpdateWithoutTableDataInput
  create?: UserCreateWithoutTableInput
}
export type UserUpsertWithWhereUniqueWithoutTableInputInputObject =
  | Extract<keyof UserUpsertWithWhereUniqueWithoutTableInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  permissions?: prisma.Permission | null
  permissions_not?: prisma.Permission | null
  permissions_in?: prisma.Permission[]
  permissions_not_in?: prisma.Permission[]
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  resetToken?: string | null
  resetToken_not?: string | null
  resetToken_in?: string[]
  resetToken_not_in?: string[]
  resetToken_lt?: string | null
  resetToken_lte?: string | null
  resetToken_gt?: string | null
  resetToken_gte?: string | null
  resetToken_contains?: string | null
  resetToken_not_contains?: string | null
  resetToken_starts_with?: string | null
  resetToken_not_starts_with?: string | null
  resetToken_ends_with?: string | null
  resetToken_not_ends_with?: string | null
  resetTokenExpiry?: number | null
  resetTokenExpiry_not?: number | null
  resetTokenExpiry_in?: number[]
  resetTokenExpiry_not_in?: number[]
  resetTokenExpiry_lt?: number | null
  resetTokenExpiry_lte?: number | null
  resetTokenExpiry_gt?: number | null
  resetTokenExpiry_gte?: number | null
  AND?: UserScalarWhereInput[]
  OR?: UserScalarWhereInput[]
  NOT?: UserScalarWhereInput[]
}
export type UserScalarWhereInputInputObject =
  | Extract<keyof UserScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'permissions_not', alias?: string  } 
  | { name: 'permissions_in', alias?: string  } 
  | { name: 'permissions_not_in', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetToken_not', alias?: string  } 
  | { name: 'resetToken_in', alias?: string  } 
  | { name: 'resetToken_not_in', alias?: string  } 
  | { name: 'resetToken_lt', alias?: string  } 
  | { name: 'resetToken_lte', alias?: string  } 
  | { name: 'resetToken_gt', alias?: string  } 
  | { name: 'resetToken_gte', alias?: string  } 
  | { name: 'resetToken_contains', alias?: string  } 
  | { name: 'resetToken_not_contains', alias?: string  } 
  | { name: 'resetToken_starts_with', alias?: string  } 
  | { name: 'resetToken_not_starts_with', alias?: string  } 
  | { name: 'resetToken_ends_with', alias?: string  } 
  | { name: 'resetToken_not_ends_with', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'resetTokenExpiry_not', alias?: string  } 
  | { name: 'resetTokenExpiry_in', alias?: string  } 
  | { name: 'resetTokenExpiry_not_in', alias?: string  } 
  | { name: 'resetTokenExpiry_lt', alias?: string  } 
  | { name: 'resetTokenExpiry_lte', alias?: string  } 
  | { name: 'resetTokenExpiry_gt', alias?: string  } 
  | { name: 'resetTokenExpiry_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserUpdateManyWithWhereNestedInput {
  where?: UserScalarWhereInput
  data?: UserUpdateManyDataInput
}
export type UserUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof UserUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateManyDataInput {
  email?: string | null
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
}
export type UserUpdateManyDataInputInputObject =
  | Extract<keyof UserUpdateManyDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  
export interface TableUpsertWithoutCartsInput {
  update?: TableUpdateWithoutCartsDataInput
  create?: TableCreateWithoutCartsInput
}
export type TableUpsertWithoutCartsInputInputObject =
  | Extract<keyof TableUpsertWithoutCartsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CartUpsertWithoutCustomerInput {
  update?: CartUpdateWithoutCustomerDataInput
  create?: CartCreateWithoutCustomerInput
}
export type CartUpsertWithoutCustomerInputInputObject =
  | Extract<keyof CartUpsertWithoutCustomerInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpsertWithoutOrdersInput {
  update?: UserUpdateWithoutOrdersDataInput
  create?: UserCreateWithoutOrdersInput
}
export type UserUpsertWithoutOrdersInputInputObject =
  | Extract<keyof UserUpsertWithoutOrdersInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderUpsertWithWhereUniqueNestedInput {
  where?: OrderWhereUniqueInput
  update?: OrderUpdateDataInput
  create?: OrderCreateInput
}
export type OrderUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof OrderUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutCartInput {
  create?: UserCreateWithoutCartInput | null
  update?: UserUpdateWithoutCartDataInput | null
  upsert?: UserUpsertWithoutCartInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutCartInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutCartInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutCartDataInput {
  email?: string | null
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string | null
  organizations?: OrganizationUpdateManyInput | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
  table?: TableUpdateOneWithoutCustomersInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
}
export type UserUpdateWithoutCartDataInputInputObject =
  | Extract<keyof UserUpdateWithoutCartDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'organizations', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface UserUpsertWithoutCartInput {
  update?: UserUpdateWithoutCartDataInput
  create?: UserCreateWithoutCartInput
}
export type UserUpsertWithoutCartInputInputObject =
  | Extract<keyof UserUpsertWithoutCartInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CartUpsertWithWhereUniqueWithoutTableInput {
  where?: CartWhereUniqueInput
  update?: CartUpdateWithoutTableDataInput
  create?: CartCreateWithoutTableInput
}
export type CartUpsertWithWhereUniqueWithoutTableInputInputObject =
  | Extract<keyof CartUpsertWithWhereUniqueWithoutTableInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CartScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  total?: number | null
  total_not?: number | null
  total_in?: number[]
  total_not_in?: number[]
  total_lt?: number | null
  total_lte?: number | null
  total_gt?: number | null
  total_gte?: number | null
  AND?: CartScalarWhereInput[]
  OR?: CartScalarWhereInput[]
  NOT?: CartScalarWhereInput[]
}
export type CartScalarWhereInputInputObject =
  | Extract<keyof CartScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'total_not', alias?: string  } 
  | { name: 'total_in', alias?: string  } 
  | { name: 'total_not_in', alias?: string  } 
  | { name: 'total_lt', alias?: string  } 
  | { name: 'total_lte', alias?: string  } 
  | { name: 'total_gt', alias?: string  } 
  | { name: 'total_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CartUpdateManyWithWhereNestedInput {
  where?: CartScalarWhereInput
  data?: CartUpdateManyDataInput
}
export type CartUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof CartUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CartUpdateManyDataInput {
  total?: number | null
}
export type CartUpdateManyDataInputInputObject =
  | Extract<keyof CartUpdateManyDataInput, string>
  | { name: 'total', alias?: string  } 
  
export interface TableUpsertWithoutCustomersInput {
  update?: TableUpdateWithoutCustomersDataInput
  create?: TableCreateWithoutCustomersInput
}
export type TableUpsertWithoutCustomersInputInputObject =
  | Extract<keyof TableUpsertWithoutCustomersInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpsertWithWhereUniqueNestedInput {
  where?: UserWhereUniqueInput
  update?: UserUpdateDataInput
  create?: UserCreateInput
}
export type UserUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof UserUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuUpdateManyWithoutOrganizationInput {
  create?: MenuCreateWithoutOrganizationInput[]
  delete?: MenuWhereUniqueInput[]
  connect?: MenuWhereUniqueInput[]
  set?: MenuWhereUniqueInput[]
  disconnect?: MenuWhereUniqueInput[]
  update?: MenuUpdateWithWhereUniqueWithoutOrganizationInput[]
  upsert?: MenuUpsertWithWhereUniqueWithoutOrganizationInput[]
  deleteMany?: MenuScalarWhereInput[]
  updateMany?: MenuUpdateManyWithWhereNestedInput[]
}
export type MenuUpdateManyWithoutOrganizationInputInputObject =
  | Extract<keyof MenuUpdateManyWithoutOrganizationInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuUpdateWithWhereUniqueWithoutOrganizationInput {
  where?: MenuWhereUniqueInput
  data?: MenuUpdateWithoutOrganizationDataInput
}
export type MenuUpdateWithWhereUniqueWithoutOrganizationInputInputObject =
  | Extract<keyof MenuUpdateWithWhereUniqueWithoutOrganizationInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuUpdateWithoutOrganizationDataInput {
  published?: boolean | null
  title?: string | null
  menuItems?: MenuItemUpdateManyWithoutMenuInput | null
}
export type MenuUpdateWithoutOrganizationDataInputInputObject =
  | Extract<keyof MenuUpdateWithoutOrganizationDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  
export interface MenuItemUpdateManyWithoutMenuInput {
  create?: MenuItemCreateWithoutMenuInput[]
  delete?: MenuItemWhereUniqueInput[]
  connect?: MenuItemWhereUniqueInput[]
  set?: MenuItemWhereUniqueInput[]
  disconnect?: MenuItemWhereUniqueInput[]
  update?: MenuItemUpdateWithWhereUniqueWithoutMenuInput[]
  upsert?: MenuItemUpsertWithWhereUniqueWithoutMenuInput[]
  deleteMany?: MenuItemScalarWhereInput[]
  updateMany?: MenuItemUpdateManyWithWhereNestedInput[]
}
export type MenuItemUpdateManyWithoutMenuInputInputObject =
  | Extract<keyof MenuItemUpdateManyWithoutMenuInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuItemUpdateWithWhereUniqueWithoutMenuInput {
  where?: MenuItemWhereUniqueInput
  data?: MenuItemUpdateWithoutMenuDataInput
}
export type MenuItemUpdateWithWhereUniqueWithoutMenuInputInputObject =
  | Extract<keyof MenuItemUpdateWithWhereUniqueWithoutMenuInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuItemUpdateWithoutMenuDataInput {
  basePrice?: string | null
  description?: string | null
  options?: MenuChoiceUpdateManyInput | null
  name?: string | null
  image?: string | null
  largeImage?: string | null
  menuHeader?: MenuHeaderUpdateOneWithoutMenuItemsInput | null
}
export type MenuItemUpdateWithoutMenuDataInputInputObject =
  | Extract<keyof MenuItemUpdateWithoutMenuDataInput, string>
  | { name: 'basePrice', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'options', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  | { name: 'menuHeader', alias?: string  } 
  
export interface MenuChoiceUpdateManyInput {
  create?: MenuChoiceCreateInput[]
  update?: MenuChoiceUpdateWithWhereUniqueNestedInput[]
  upsert?: MenuChoiceUpsertWithWhereUniqueNestedInput[]
  delete?: MenuChoiceWhereUniqueInput[]
  connect?: MenuChoiceWhereUniqueInput[]
  set?: MenuChoiceWhereUniqueInput[]
  disconnect?: MenuChoiceWhereUniqueInput[]
  deleteMany?: MenuChoiceScalarWhereInput[]
  updateMany?: MenuChoiceUpdateManyWithWhereNestedInput[]
}
export type MenuChoiceUpdateManyInputInputObject =
  | Extract<keyof MenuChoiceUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuChoiceUpdateWithWhereUniqueNestedInput {
  where?: MenuChoiceWhereUniqueInput
  data?: MenuChoiceUpdateDataInput
}
export type MenuChoiceUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof MenuChoiceUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuChoiceUpdateDataInput {
  header?: string | null
  subHeader?: string | null
  selections?: MenuSelectionUpdateManyWithoutMenuChoiceInput | null
}
export type MenuChoiceUpdateDataInputInputObject =
  | Extract<keyof MenuChoiceUpdateDataInput, string>
  | { name: 'header', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'selections', alias?: string  } 
  
export interface MenuSelectionUpdateManyWithoutMenuChoiceInput {
  create?: MenuSelectionCreateWithoutMenuChoiceInput[]
  delete?: MenuSelectionWhereUniqueInput[]
  connect?: MenuSelectionWhereUniqueInput[]
  set?: MenuSelectionWhereUniqueInput[]
  disconnect?: MenuSelectionWhereUniqueInput[]
  update?: MenuSelectionUpdateWithWhereUniqueWithoutMenuChoiceInput[]
  upsert?: MenuSelectionUpsertWithWhereUniqueWithoutMenuChoiceInput[]
  deleteMany?: MenuSelectionScalarWhereInput[]
  updateMany?: MenuSelectionUpdateManyWithWhereNestedInput[]
}
export type MenuSelectionUpdateManyWithoutMenuChoiceInputInputObject =
  | Extract<keyof MenuSelectionUpdateManyWithoutMenuChoiceInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuSelectionUpdateWithWhereUniqueWithoutMenuChoiceInput {
  where?: MenuSelectionWhereUniqueInput
  data?: MenuSelectionUpdateWithoutMenuChoiceDataInput
}
export type MenuSelectionUpdateWithWhereUniqueWithoutMenuChoiceInputInputObject =
  | Extract<keyof MenuSelectionUpdateWithWhereUniqueWithoutMenuChoiceInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuSelectionUpdateWithoutMenuChoiceDataInput {
  name?: string | null
  selected?: boolean | null
  valueAdd?: string | null
}
export type MenuSelectionUpdateWithoutMenuChoiceDataInputInputObject =
  | Extract<keyof MenuSelectionUpdateWithoutMenuChoiceDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'selected', alias?: string  } 
  | { name: 'valueAdd', alias?: string  } 
  
export interface MenuSelectionUpsertWithWhereUniqueWithoutMenuChoiceInput {
  where?: MenuSelectionWhereUniqueInput
  update?: MenuSelectionUpdateWithoutMenuChoiceDataInput
  create?: MenuSelectionCreateWithoutMenuChoiceInput
}
export type MenuSelectionUpsertWithWhereUniqueWithoutMenuChoiceInputInputObject =
  | Extract<keyof MenuSelectionUpsertWithWhereUniqueWithoutMenuChoiceInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuSelectionScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  selected?: boolean | null
  selected_not?: boolean | null
  valueAdd?: string | null
  valueAdd_not?: string | null
  valueAdd_in?: string[]
  valueAdd_not_in?: string[]
  valueAdd_lt?: string | null
  valueAdd_lte?: string | null
  valueAdd_gt?: string | null
  valueAdd_gte?: string | null
  valueAdd_contains?: string | null
  valueAdd_not_contains?: string | null
  valueAdd_starts_with?: string | null
  valueAdd_not_starts_with?: string | null
  valueAdd_ends_with?: string | null
  valueAdd_not_ends_with?: string | null
  AND?: MenuSelectionScalarWhereInput[]
  OR?: MenuSelectionScalarWhereInput[]
  NOT?: MenuSelectionScalarWhereInput[]
}
export type MenuSelectionScalarWhereInputInputObject =
  | Extract<keyof MenuSelectionScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'selected', alias?: string  } 
  | { name: 'selected_not', alias?: string  } 
  | { name: 'valueAdd', alias?: string  } 
  | { name: 'valueAdd_not', alias?: string  } 
  | { name: 'valueAdd_in', alias?: string  } 
  | { name: 'valueAdd_not_in', alias?: string  } 
  | { name: 'valueAdd_lt', alias?: string  } 
  | { name: 'valueAdd_lte', alias?: string  } 
  | { name: 'valueAdd_gt', alias?: string  } 
  | { name: 'valueAdd_gte', alias?: string  } 
  | { name: 'valueAdd_contains', alias?: string  } 
  | { name: 'valueAdd_not_contains', alias?: string  } 
  | { name: 'valueAdd_starts_with', alias?: string  } 
  | { name: 'valueAdd_not_starts_with', alias?: string  } 
  | { name: 'valueAdd_ends_with', alias?: string  } 
  | { name: 'valueAdd_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuSelectionUpdateManyWithWhereNestedInput {
  where?: MenuSelectionScalarWhereInput
  data?: MenuSelectionUpdateManyDataInput
}
export type MenuSelectionUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MenuSelectionUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuSelectionUpdateManyDataInput {
  name?: string | null
  selected?: boolean | null
  valueAdd?: string | null
}
export type MenuSelectionUpdateManyDataInputInputObject =
  | Extract<keyof MenuSelectionUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'selected', alias?: string  } 
  | { name: 'valueAdd', alias?: string  } 
  
export interface MenuChoiceUpsertWithWhereUniqueNestedInput {
  where?: MenuChoiceWhereUniqueInput
  update?: MenuChoiceUpdateDataInput
  create?: MenuChoiceCreateInput
}
export type MenuChoiceUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof MenuChoiceUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuChoiceScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  header?: string | null
  header_not?: string | null
  header_in?: string[]
  header_not_in?: string[]
  header_lt?: string | null
  header_lte?: string | null
  header_gt?: string | null
  header_gte?: string | null
  header_contains?: string | null
  header_not_contains?: string | null
  header_starts_with?: string | null
  header_not_starts_with?: string | null
  header_ends_with?: string | null
  header_not_ends_with?: string | null
  subHeader?: string | null
  subHeader_not?: string | null
  subHeader_in?: string[]
  subHeader_not_in?: string[]
  subHeader_lt?: string | null
  subHeader_lte?: string | null
  subHeader_gt?: string | null
  subHeader_gte?: string | null
  subHeader_contains?: string | null
  subHeader_not_contains?: string | null
  subHeader_starts_with?: string | null
  subHeader_not_starts_with?: string | null
  subHeader_ends_with?: string | null
  subHeader_not_ends_with?: string | null
  AND?: MenuChoiceScalarWhereInput[]
  OR?: MenuChoiceScalarWhereInput[]
  NOT?: MenuChoiceScalarWhereInput[]
}
export type MenuChoiceScalarWhereInputInputObject =
  | Extract<keyof MenuChoiceScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'header', alias?: string  } 
  | { name: 'header_not', alias?: string  } 
  | { name: 'header_in', alias?: string  } 
  | { name: 'header_not_in', alias?: string  } 
  | { name: 'header_lt', alias?: string  } 
  | { name: 'header_lte', alias?: string  } 
  | { name: 'header_gt', alias?: string  } 
  | { name: 'header_gte', alias?: string  } 
  | { name: 'header_contains', alias?: string  } 
  | { name: 'header_not_contains', alias?: string  } 
  | { name: 'header_starts_with', alias?: string  } 
  | { name: 'header_not_starts_with', alias?: string  } 
  | { name: 'header_ends_with', alias?: string  } 
  | { name: 'header_not_ends_with', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'subHeader_not', alias?: string  } 
  | { name: 'subHeader_in', alias?: string  } 
  | { name: 'subHeader_not_in', alias?: string  } 
  | { name: 'subHeader_lt', alias?: string  } 
  | { name: 'subHeader_lte', alias?: string  } 
  | { name: 'subHeader_gt', alias?: string  } 
  | { name: 'subHeader_gte', alias?: string  } 
  | { name: 'subHeader_contains', alias?: string  } 
  | { name: 'subHeader_not_contains', alias?: string  } 
  | { name: 'subHeader_starts_with', alias?: string  } 
  | { name: 'subHeader_not_starts_with', alias?: string  } 
  | { name: 'subHeader_ends_with', alias?: string  } 
  | { name: 'subHeader_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuChoiceUpdateManyWithWhereNestedInput {
  where?: MenuChoiceScalarWhereInput
  data?: MenuChoiceUpdateManyDataInput
}
export type MenuChoiceUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MenuChoiceUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuChoiceUpdateManyDataInput {
  header?: string | null
  subHeader?: string | null
}
export type MenuChoiceUpdateManyDataInputInputObject =
  | Extract<keyof MenuChoiceUpdateManyDataInput, string>
  | { name: 'header', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  
export interface MenuHeaderUpdateOneWithoutMenuItemsInput {
  create?: MenuHeaderCreateWithoutMenuItemsInput | null
  update?: MenuHeaderUpdateWithoutMenuItemsDataInput | null
  upsert?: MenuHeaderUpsertWithoutMenuItemsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: MenuHeaderWhereUniqueInput | null
}
export type MenuHeaderUpdateOneWithoutMenuItemsInputInputObject =
  | Extract<keyof MenuHeaderUpdateOneWithoutMenuItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuHeaderUpdateWithoutMenuItemsDataInput {
  name?: string | null
  subHeader?: string | null
  menu?: MenuUpdateOneInput | null
}
export type MenuHeaderUpdateWithoutMenuItemsDataInputInputObject =
  | Extract<keyof MenuHeaderUpdateWithoutMenuItemsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  
export interface MenuUpdateOneInput {
  create?: MenuCreateInput | null
  update?: MenuUpdateDataInput | null
  upsert?: MenuUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: MenuWhereUniqueInput | null
}
export type MenuUpdateOneInputInputObject =
  | Extract<keyof MenuUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuUpdateDataInput {
  published?: boolean | null
  title?: string | null
  menuItems?: MenuItemUpdateManyWithoutMenuInput | null
  organization?: OrganizationUpdateOneRequiredWithoutMenusInput | null
}
export type MenuUpdateDataInputInputObject =
  | Extract<keyof MenuUpdateDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  
export interface OrganizationUpdateOneRequiredWithoutMenusInput {
  create?: OrganizationCreateWithoutMenusInput | null
  update?: OrganizationUpdateWithoutMenusDataInput | null
  upsert?: OrganizationUpsertWithoutMenusInput | null
  connect?: OrganizationWhereUniqueInput | null
}
export type OrganizationUpdateOneRequiredWithoutMenusInputInputObject =
  | Extract<keyof OrganizationUpdateOneRequiredWithoutMenusInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationUpdateWithoutMenusDataInput {
  name?: string | null
  users?: UserUpdateManyInput | null
  owner?: UserUpdateOneRequiredInput | null
}
export type OrganizationUpdateWithoutMenusDataInputInputObject =
  | Extract<keyof OrganizationUpdateWithoutMenusDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'users', alias?: string  } 
  | { name: 'owner', alias?: string  } 
  
export interface OrganizationUpsertWithoutMenusInput {
  update?: OrganizationUpdateWithoutMenusDataInput
  create?: OrganizationCreateWithoutMenusInput
}
export type OrganizationUpsertWithoutMenusInputInputObject =
  | Extract<keyof OrganizationUpsertWithoutMenusInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuUpsertNestedInput {
  update?: MenuUpdateDataInput
  create?: MenuCreateInput
}
export type MenuUpsertNestedInputInputObject =
  | Extract<keyof MenuUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuHeaderUpsertWithoutMenuItemsInput {
  update?: MenuHeaderUpdateWithoutMenuItemsDataInput
  create?: MenuHeaderCreateWithoutMenuItemsInput
}
export type MenuHeaderUpsertWithoutMenuItemsInputInputObject =
  | Extract<keyof MenuHeaderUpsertWithoutMenuItemsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuItemUpsertWithWhereUniqueWithoutMenuInput {
  where?: MenuItemWhereUniqueInput
  update?: MenuItemUpdateWithoutMenuDataInput
  create?: MenuItemCreateWithoutMenuInput
}
export type MenuItemUpsertWithWhereUniqueWithoutMenuInputInputObject =
  | Extract<keyof MenuItemUpsertWithWhereUniqueWithoutMenuInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  basePrice?: string | null
  basePrice_not?: string | null
  basePrice_in?: string[]
  basePrice_not_in?: string[]
  basePrice_lt?: string | null
  basePrice_lte?: string | null
  basePrice_gt?: string | null
  basePrice_gte?: string | null
  basePrice_contains?: string | null
  basePrice_not_contains?: string | null
  basePrice_starts_with?: string | null
  basePrice_not_starts_with?: string | null
  basePrice_ends_with?: string | null
  basePrice_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  largeImage?: string | null
  largeImage_not?: string | null
  largeImage_in?: string[]
  largeImage_not_in?: string[]
  largeImage_lt?: string | null
  largeImage_lte?: string | null
  largeImage_gt?: string | null
  largeImage_gte?: string | null
  largeImage_contains?: string | null
  largeImage_not_contains?: string | null
  largeImage_starts_with?: string | null
  largeImage_not_starts_with?: string | null
  largeImage_ends_with?: string | null
  largeImage_not_ends_with?: string | null
  AND?: MenuItemScalarWhereInput[]
  OR?: MenuItemScalarWhereInput[]
  NOT?: MenuItemScalarWhereInput[]
}
export type MenuItemScalarWhereInputInputObject =
  | Extract<keyof MenuItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'basePrice', alias?: string  } 
  | { name: 'basePrice_not', alias?: string  } 
  | { name: 'basePrice_in', alias?: string  } 
  | { name: 'basePrice_not_in', alias?: string  } 
  | { name: 'basePrice_lt', alias?: string  } 
  | { name: 'basePrice_lte', alias?: string  } 
  | { name: 'basePrice_gt', alias?: string  } 
  | { name: 'basePrice_gte', alias?: string  } 
  | { name: 'basePrice_contains', alias?: string  } 
  | { name: 'basePrice_not_contains', alias?: string  } 
  | { name: 'basePrice_starts_with', alias?: string  } 
  | { name: 'basePrice_not_starts_with', alias?: string  } 
  | { name: 'basePrice_ends_with', alias?: string  } 
  | { name: 'basePrice_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  | { name: 'largeImage_not', alias?: string  } 
  | { name: 'largeImage_in', alias?: string  } 
  | { name: 'largeImage_not_in', alias?: string  } 
  | { name: 'largeImage_lt', alias?: string  } 
  | { name: 'largeImage_lte', alias?: string  } 
  | { name: 'largeImage_gt', alias?: string  } 
  | { name: 'largeImage_gte', alias?: string  } 
  | { name: 'largeImage_contains', alias?: string  } 
  | { name: 'largeImage_not_contains', alias?: string  } 
  | { name: 'largeImage_starts_with', alias?: string  } 
  | { name: 'largeImage_not_starts_with', alias?: string  } 
  | { name: 'largeImage_ends_with', alias?: string  } 
  | { name: 'largeImage_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuItemUpdateManyWithWhereNestedInput {
  where?: MenuItemScalarWhereInput
  data?: MenuItemUpdateManyDataInput
}
export type MenuItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MenuItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuItemUpdateManyDataInput {
  basePrice?: string | null
  description?: string | null
  name?: string | null
  image?: string | null
  largeImage?: string | null
}
export type MenuItemUpdateManyDataInputInputObject =
  | Extract<keyof MenuItemUpdateManyDataInput, string>
  | { name: 'basePrice', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  
export interface MenuUpsertWithWhereUniqueWithoutOrganizationInput {
  where?: MenuWhereUniqueInput
  update?: MenuUpdateWithoutOrganizationDataInput
  create?: MenuCreateWithoutOrganizationInput
}
export type MenuUpsertWithWhereUniqueWithoutOrganizationInputInputObject =
  | Extract<keyof MenuUpsertWithWhereUniqueWithoutOrganizationInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  published?: boolean | null
  published_not?: boolean | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  AND?: MenuScalarWhereInput[]
  OR?: MenuScalarWhereInput[]
  NOT?: MenuScalarWhereInput[]
}
export type MenuScalarWhereInputInputObject =
  | Extract<keyof MenuScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuUpdateManyWithWhereNestedInput {
  where?: MenuScalarWhereInput
  data?: MenuUpdateManyDataInput
}
export type MenuUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MenuUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuUpdateManyDataInput {
  published?: boolean | null
  title?: string | null
}
export type MenuUpdateManyDataInputInputObject =
  | Extract<keyof MenuUpdateManyDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  
export interface OrganizationUpsertWithWhereUniqueNestedInput {
  where?: OrganizationWhereUniqueInput
  update?: OrganizationUpdateDataInput
  create?: OrganizationCreateInput
}
export type OrganizationUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof OrganizationUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  AND?: OrganizationScalarWhereInput[]
  OR?: OrganizationScalarWhereInput[]
  NOT?: OrganizationScalarWhereInput[]
}
export type OrganizationScalarWhereInputInputObject =
  | Extract<keyof OrganizationScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationUpdateManyWithWhereNestedInput {
  where?: OrganizationScalarWhereInput
  data?: OrganizationUpdateManyDataInput
}
export type OrganizationUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrganizationUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrganizationUpdateManyDataInput {
  name?: string | null
}
export type OrganizationUpdateManyDataInputInputObject =
  | Extract<keyof OrganizationUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  email?: string | null
  name?: string | null
  permissions?: prisma.Permission | null
  password?: string | null
  resetToken?: string | null
  resetTokenExpiry?: number | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'permissions', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetTokenExpiry', alias?: string  } 
  
export interface OrganizationUpdateInput {
  name?: string | null
  users?: UserUpdateManyInput | null
  menus?: MenuUpdateManyWithoutOrganizationInput | null
  owner?: UserUpdateOneRequiredInput | null
}
export type OrganizationUpdateInputInputObject =
  | Extract<keyof OrganizationUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'users', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'owner', alias?: string  } 
  
export interface OrganizationUpdateManyMutationInput {
  name?: string | null
}
export type OrganizationUpdateManyMutationInputInputObject =
  | Extract<keyof OrganizationUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  
export interface MenuUpdateInput {
  published?: boolean | null
  title?: string | null
  menuItems?: MenuItemUpdateManyWithoutMenuInput | null
  organization?: OrganizationUpdateOneRequiredWithoutMenusInput | null
}
export type MenuUpdateInputInputObject =
  | Extract<keyof MenuUpdateInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  
export interface MenuUpdateManyMutationInput {
  published?: boolean | null
  title?: string | null
}
export type MenuUpdateManyMutationInputInputObject =
  | Extract<keyof MenuUpdateManyMutationInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  
export interface MenuItemCreateInput {
  id?: string | null
  basePrice?: string
  description?: string | null
  menu?: MenuCreateOneWithoutMenuItemsInput | null
  options?: MenuChoiceCreateManyInput | null
  name?: string
  image?: string | null
  largeImage?: string | null
  menuHeader?: MenuHeaderCreateOneWithoutMenuItemsInput | null
}
export type MenuItemCreateInputInputObject =
  | Extract<keyof MenuItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'basePrice', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'options', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  | { name: 'menuHeader', alias?: string  } 
  
export interface MenuCreateOneWithoutMenuItemsInput {
  create?: MenuCreateWithoutMenuItemsInput | null
  connect?: MenuWhereUniqueInput | null
}
export type MenuCreateOneWithoutMenuItemsInputInputObject =
  | Extract<keyof MenuCreateOneWithoutMenuItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCreateWithoutMenuItemsInput {
  id?: string | null
  published?: boolean | null
  title?: string
  organization?: OrganizationCreateOneWithoutMenusInput
}
export type MenuCreateWithoutMenuItemsInputInputObject =
  | Extract<keyof MenuCreateWithoutMenuItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  
export interface MenuItemUpdateInput {
  basePrice?: string | null
  description?: string | null
  menu?: MenuUpdateOneWithoutMenuItemsInput | null
  options?: MenuChoiceUpdateManyInput | null
  name?: string | null
  image?: string | null
  largeImage?: string | null
  menuHeader?: MenuHeaderUpdateOneWithoutMenuItemsInput | null
}
export type MenuItemUpdateInputInputObject =
  | Extract<keyof MenuItemUpdateInput, string>
  | { name: 'basePrice', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'options', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  | { name: 'menuHeader', alias?: string  } 
  
export interface MenuUpdateOneWithoutMenuItemsInput {
  create?: MenuCreateWithoutMenuItemsInput | null
  update?: MenuUpdateWithoutMenuItemsDataInput | null
  upsert?: MenuUpsertWithoutMenuItemsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: MenuWhereUniqueInput | null
}
export type MenuUpdateOneWithoutMenuItemsInputInputObject =
  | Extract<keyof MenuUpdateOneWithoutMenuItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuUpdateWithoutMenuItemsDataInput {
  published?: boolean | null
  title?: string | null
  organization?: OrganizationUpdateOneRequiredWithoutMenusInput | null
}
export type MenuUpdateWithoutMenuItemsDataInputInputObject =
  | Extract<keyof MenuUpdateWithoutMenuItemsDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  
export interface MenuUpsertWithoutMenuItemsInput {
  update?: MenuUpdateWithoutMenuItemsDataInput
  create?: MenuCreateWithoutMenuItemsInput
}
export type MenuUpsertWithoutMenuItemsInputInputObject =
  | Extract<keyof MenuUpsertWithoutMenuItemsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuItemUpdateManyMutationInput {
  basePrice?: string | null
  description?: string | null
  name?: string | null
  image?: string | null
  largeImage?: string | null
}
export type MenuItemUpdateManyMutationInputInputObject =
  | Extract<keyof MenuItemUpdateManyMutationInput, string>
  | { name: 'basePrice', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  
export interface MenuChoiceUpdateInput {
  header?: string | null
  subHeader?: string | null
  selections?: MenuSelectionUpdateManyWithoutMenuChoiceInput | null
}
export type MenuChoiceUpdateInputInputObject =
  | Extract<keyof MenuChoiceUpdateInput, string>
  | { name: 'header', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'selections', alias?: string  } 
  
export interface MenuChoiceUpdateManyMutationInput {
  header?: string | null
  subHeader?: string | null
}
export type MenuChoiceUpdateManyMutationInputInputObject =
  | Extract<keyof MenuChoiceUpdateManyMutationInput, string>
  | { name: 'header', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  
export interface MenuSelectionCreateInput {
  id?: string | null
  name?: string
  selected?: boolean | null
  valueAdd?: string | null
  menuChoice?: MenuChoiceCreateOneWithoutSelectionsInput | null
}
export type MenuSelectionCreateInputInputObject =
  | Extract<keyof MenuSelectionCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'selected', alias?: string  } 
  | { name: 'valueAdd', alias?: string  } 
  | { name: 'menuChoice', alias?: string  } 
  
export interface MenuChoiceCreateOneWithoutSelectionsInput {
  create?: MenuChoiceCreateWithoutSelectionsInput | null
  connect?: MenuChoiceWhereUniqueInput | null
}
export type MenuChoiceCreateOneWithoutSelectionsInputInputObject =
  | Extract<keyof MenuChoiceCreateOneWithoutSelectionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuChoiceCreateWithoutSelectionsInput {
  id?: string | null
  header?: string
  subHeader?: string | null
}
export type MenuChoiceCreateWithoutSelectionsInputInputObject =
  | Extract<keyof MenuChoiceCreateWithoutSelectionsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'header', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  
export interface MenuSelectionUpdateInput {
  name?: string | null
  selected?: boolean | null
  valueAdd?: string | null
  menuChoice?: MenuChoiceUpdateOneWithoutSelectionsInput | null
}
export type MenuSelectionUpdateInputInputObject =
  | Extract<keyof MenuSelectionUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'selected', alias?: string  } 
  | { name: 'valueAdd', alias?: string  } 
  | { name: 'menuChoice', alias?: string  } 
  
export interface MenuChoiceUpdateOneWithoutSelectionsInput {
  create?: MenuChoiceCreateWithoutSelectionsInput | null
  update?: MenuChoiceUpdateWithoutSelectionsDataInput | null
  upsert?: MenuChoiceUpsertWithoutSelectionsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: MenuChoiceWhereUniqueInput | null
}
export type MenuChoiceUpdateOneWithoutSelectionsInputInputObject =
  | Extract<keyof MenuChoiceUpdateOneWithoutSelectionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuChoiceUpdateWithoutSelectionsDataInput {
  header?: string | null
  subHeader?: string | null
}
export type MenuChoiceUpdateWithoutSelectionsDataInputInputObject =
  | Extract<keyof MenuChoiceUpdateWithoutSelectionsDataInput, string>
  | { name: 'header', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  
export interface MenuChoiceUpsertWithoutSelectionsInput {
  update?: MenuChoiceUpdateWithoutSelectionsDataInput
  create?: MenuChoiceCreateWithoutSelectionsInput
}
export type MenuChoiceUpsertWithoutSelectionsInputInputObject =
  | Extract<keyof MenuChoiceUpsertWithoutSelectionsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuSelectionUpdateManyMutationInput {
  name?: string | null
  selected?: boolean | null
  valueAdd?: string | null
}
export type MenuSelectionUpdateManyMutationInputInputObject =
  | Extract<keyof MenuSelectionUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'selected', alias?: string  } 
  | { name: 'valueAdd', alias?: string  } 
  
export interface MenuHeaderCreateInput {
  id?: string | null
  name?: string
  subHeader?: string | null
  menuItems?: MenuItemCreateManyWithoutMenuHeaderInput | null
  menu?: MenuCreateOneInput | null
}
export type MenuHeaderCreateInputInputObject =
  | Extract<keyof MenuHeaderCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  
export interface MenuItemCreateManyWithoutMenuHeaderInput {
  create?: MenuItemCreateWithoutMenuHeaderInput[]
  connect?: MenuItemWhereUniqueInput[]
}
export type MenuItemCreateManyWithoutMenuHeaderInputInputObject =
  | Extract<keyof MenuItemCreateManyWithoutMenuHeaderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuItemCreateWithoutMenuHeaderInput {
  id?: string | null
  basePrice?: string
  description?: string | null
  menu?: MenuCreateOneWithoutMenuItemsInput | null
  options?: MenuChoiceCreateManyInput | null
  name?: string
  image?: string | null
  largeImage?: string | null
}
export type MenuItemCreateWithoutMenuHeaderInputInputObject =
  | Extract<keyof MenuItemCreateWithoutMenuHeaderInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'basePrice', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'options', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  
export interface MenuHeaderUpdateInput {
  name?: string | null
  subHeader?: string | null
  menuItems?: MenuItemUpdateManyWithoutMenuHeaderInput | null
  menu?: MenuUpdateOneInput | null
}
export type MenuHeaderUpdateInputInputObject =
  | Extract<keyof MenuHeaderUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  
export interface MenuItemUpdateManyWithoutMenuHeaderInput {
  create?: MenuItemCreateWithoutMenuHeaderInput[]
  delete?: MenuItemWhereUniqueInput[]
  connect?: MenuItemWhereUniqueInput[]
  set?: MenuItemWhereUniqueInput[]
  disconnect?: MenuItemWhereUniqueInput[]
  update?: MenuItemUpdateWithWhereUniqueWithoutMenuHeaderInput[]
  upsert?: MenuItemUpsertWithWhereUniqueWithoutMenuHeaderInput[]
  deleteMany?: MenuItemScalarWhereInput[]
  updateMany?: MenuItemUpdateManyWithWhereNestedInput[]
}
export type MenuItemUpdateManyWithoutMenuHeaderInputInputObject =
  | Extract<keyof MenuItemUpdateManyWithoutMenuHeaderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuItemUpdateWithWhereUniqueWithoutMenuHeaderInput {
  where?: MenuItemWhereUniqueInput
  data?: MenuItemUpdateWithoutMenuHeaderDataInput
}
export type MenuItemUpdateWithWhereUniqueWithoutMenuHeaderInputInputObject =
  | Extract<keyof MenuItemUpdateWithWhereUniqueWithoutMenuHeaderInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuItemUpdateWithoutMenuHeaderDataInput {
  basePrice?: string | null
  description?: string | null
  menu?: MenuUpdateOneWithoutMenuItemsInput | null
  options?: MenuChoiceUpdateManyInput | null
  name?: string | null
  image?: string | null
  largeImage?: string | null
}
export type MenuItemUpdateWithoutMenuHeaderDataInputInputObject =
  | Extract<keyof MenuItemUpdateWithoutMenuHeaderDataInput, string>
  | { name: 'basePrice', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'options', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'largeImage', alias?: string  } 
  
export interface MenuItemUpsertWithWhereUniqueWithoutMenuHeaderInput {
  where?: MenuItemWhereUniqueInput
  update?: MenuItemUpdateWithoutMenuHeaderDataInput
  create?: MenuItemCreateWithoutMenuHeaderInput
}
export type MenuItemUpsertWithWhereUniqueWithoutMenuHeaderInputInputObject =
  | Extract<keyof MenuItemUpsertWithWhereUniqueWithoutMenuHeaderInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuHeaderUpdateManyMutationInput {
  name?: string | null
  subHeader?: string | null
}
export type MenuHeaderUpdateManyMutationInputInputObject =
  | Extract<keyof MenuHeaderUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'subHeader', alias?: string  } 
  
export interface TableCreateInput {
  id?: string | null
  customers?: UserCreateManyWithoutTableInput | null
  carts?: CartCreateManyWithoutTableInput | null
}
export type TableCreateInputInputObject =
  | Extract<keyof TableCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'customers', alias?: string  } 
  | { name: 'carts', alias?: string  } 
  
export interface TableUpdateInput {
  customers?: UserUpdateManyWithoutTableInput | null
  carts?: CartUpdateManyWithoutTableInput | null
}
export type TableUpdateInputInputObject =
  | Extract<keyof TableUpdateInput, string>
  | { name: 'customers', alias?: string  } 
  | { name: 'carts', alias?: string  } 
  
export interface CartCreateInput {
  id?: string | null
  orders?: OrderCreateManyInput | null
  customer?: UserCreateOneWithoutCartInput
  table?: TableCreateOneWithoutCartsInput | null
  total?: number
}
export type CartCreateInputInputObject =
  | Extract<keyof CartCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'total', alias?: string  } 
  
export interface CartUpdateInput {
  orders?: OrderUpdateManyInput | null
  customer?: UserUpdateOneRequiredWithoutCartInput | null
  table?: TableUpdateOneWithoutCartsInput | null
  total?: number | null
}
export type CartUpdateInputInputObject =
  | Extract<keyof CartUpdateInput, string>
  | { name: 'orders', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'table', alias?: string  } 
  | { name: 'total', alias?: string  } 
  
export interface CartUpdateManyMutationInput {
  total?: number | null
}
export type CartUpdateManyMutationInputInputObject =
  | Extract<keyof CartUpdateManyMutationInput, string>
  | { name: 'total', alias?: string  } 
  
export interface OrderUpdateInput {
  items?: OrderItemUpdateManyInput | null
  total?: number | null
  customer?: UserUpdateOneRequiredWithoutOrdersInput | null
  charge?: string | null
}
export type OrderUpdateInputInputObject =
  | Extract<keyof OrderUpdateInput, string>
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  
export interface OrderUpdateManyMutationInput {
  total?: number | null
  charge?: string | null
}
export type OrderUpdateManyMutationInputInputObject =
  | Extract<keyof OrderUpdateManyMutationInput, string>
  | { name: 'total', alias?: string  } 
  | { name: 'charge', alias?: string  } 
  
export interface OrderItemUpdateInput {
  title?: string | null
  price?: number | null
  quantity?: number | null
  customer?: UserUpdateOneRequiredInput | null
}
export type OrderItemUpdateInputInputObject =
  | Extract<keyof OrderItemUpdateInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface OrderItemUpdateManyMutationInput {
  title?: string | null
  price?: number | null
  quantity?: number | null
}
export type OrderItemUpdateManyMutationInputInputObject =
  | Extract<keyof OrderItemUpdateManyMutationInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrganizationWhereInput | null
  AND?: OrganizationSubscriptionWhereInput[]
  OR?: OrganizationSubscriptionWhereInput[]
  NOT?: OrganizationSubscriptionWhereInput[]
}
export type OrganizationSubscriptionWhereInputInputObject =
  | Extract<keyof OrganizationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MenuWhereInput | null
  AND?: MenuSubscriptionWhereInput[]
  OR?: MenuSubscriptionWhereInput[]
  NOT?: MenuSubscriptionWhereInput[]
}
export type MenuSubscriptionWhereInputInputObject =
  | Extract<keyof MenuSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MenuItemWhereInput | null
  AND?: MenuItemSubscriptionWhereInput[]
  OR?: MenuItemSubscriptionWhereInput[]
  NOT?: MenuItemSubscriptionWhereInput[]
}
export type MenuItemSubscriptionWhereInputInputObject =
  | Extract<keyof MenuItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuChoiceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MenuChoiceWhereInput | null
  AND?: MenuChoiceSubscriptionWhereInput[]
  OR?: MenuChoiceSubscriptionWhereInput[]
  NOT?: MenuChoiceSubscriptionWhereInput[]
}
export type MenuChoiceSubscriptionWhereInputInputObject =
  | Extract<keyof MenuChoiceSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuSelectionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MenuSelectionWhereInput | null
  AND?: MenuSelectionSubscriptionWhereInput[]
  OR?: MenuSelectionSubscriptionWhereInput[]
  NOT?: MenuSelectionSubscriptionWhereInput[]
}
export type MenuSelectionSubscriptionWhereInputInputObject =
  | Extract<keyof MenuSelectionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuHeaderSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MenuHeaderWhereInput | null
  AND?: MenuHeaderSubscriptionWhereInput[]
  OR?: MenuHeaderSubscriptionWhereInput[]
  NOT?: MenuHeaderSubscriptionWhereInput[]
}
export type MenuHeaderSubscriptionWhereInputInputObject =
  | Extract<keyof MenuHeaderSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TableSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: TableWhereInput | null
  AND?: TableSubscriptionWhereInput[]
  OR?: TableSubscriptionWhereInput[]
  NOT?: TableSubscriptionWhereInput[]
}
export type TableSubscriptionWhereInputInputObject =
  | Extract<keyof TableSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CartSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CartWhereInput | null
  AND?: CartSubscriptionWhereInput[]
  OR?: CartSubscriptionWhereInput[]
  NOT?: CartSubscriptionWhereInput[]
}
export type CartSubscriptionWhereInputInputObject =
  | Extract<keyof CartSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderWhereInput | null
  AND?: OrderSubscriptionWhereInput[]
  OR?: OrderSubscriptionWhereInput[]
  NOT?: OrderSubscriptionWhereInput[]
}
export type OrderSubscriptionWhereInputInputObject =
  | Extract<keyof OrderSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderItemWhereInput | null
  AND?: OrderItemSubscriptionWhereInput[]
  OR?: OrderItemSubscriptionWhereInput[]
  NOT?: OrderItemSubscriptionWhereInput[]
}
export type OrderItemSubscriptionWhereInputInputObject =
  | Extract<keyof OrderItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type PermissionValues =
  | 'OWNER'
  | 'ADMIN'
  | 'CUSTOMER'
  
export type OrganizationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'permissions_ASC'
  | 'permissions_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'resetToken_ASC'
  | 'resetToken_DESC'
  | 'resetTokenExpiry_ASC'
  | 'resetTokenExpiry_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MenuOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'published_ASC'
  | 'published_DESC'
  | 'title_ASC'
  | 'title_DESC'
  
export type MenuItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'basePrice_ASC'
  | 'basePrice_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'image_ASC'
  | 'image_DESC'
  | 'largeImage_ASC'
  | 'largeImage_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MenuChoiceOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'header_ASC'
  | 'header_DESC'
  | 'subHeader_ASC'
  | 'subHeader_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MenuSelectionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'selected_ASC'
  | 'selected_DESC'
  | 'valueAdd_ASC'
  | 'valueAdd_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CartOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'total_ASC'
  | 'total_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrderOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'total_ASC'
  | 'total_DESC'
  | 'charge_ASC'
  | 'charge_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrderItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'quantity_ASC'
  | 'quantity_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MenuHeaderOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'subHeader_ASC'
  | 'subHeader_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type TableOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  